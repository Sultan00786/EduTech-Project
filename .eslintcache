[{"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\index.js":"1","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\App.js":"2","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\reducer\\index.js":"3","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Login.js":"4","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\SignUp.js":"5","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Home.js":"6","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Error.js":"7","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\About.js":"8","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\utils\\constants.js":"9","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\UpdatePassword.jsx":"10","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\ForgotPassword.jsx":"11","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\VerifyEmail.jsx":"12","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Dashborad.jsx":"13","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\MyProfile.jsx":"14","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Navbar.jsx":"15","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\OpenRoute.jsx":"16","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\EnrolledCourses.jsx":"17","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\PrivateRout.jsx":"18","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\viewCourseSlice.js":"19","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\profileSlice.js":"20","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\cartSlice.js":"21","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\authSlice.js":"22","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\courseSlice.js":"23","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\index.js":"24","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\index.jsx":"25","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\index.jsx":"26","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Template.jsx":"27","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Footer.jsx":"28","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\LearningLanguageSection.jsx":"29","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\CodeBlocks.jsx":"30","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\Botton.jsx":"31","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\HighlightText.jsx":"32","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\InstructorSection.jsx":"33","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\ExploreMore.jsx":"34","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\TimelineSection.jsx":"35","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\StackComponent.jsx":"36","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\LearningGrid.jsx":"37","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\Quote.jsx":"38","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\ContactFormSection.jsx":"39","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\profileAPI.js":"40","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\authAPI.js":"41","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\apiconnector.js":"42","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\api.js":"43","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\navbar-links.js":"44","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Sidebar.jsx":"45","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Iconbtn.jsx":"46","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\ProfileDropDown.jsx":"47","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\RenderCartCourses.jsx":"48","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\RenderTotalAmount.jsx":"49","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\footer-links.js":"50","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\homepage-explore.js":"51","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\DeleteAccount.jsx":"52","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\ChangeProfilePicture.jsx":"53","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\UpdatePassword.jsx":"54","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\RenderSteps.jsx":"55","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\EditProfile.jsx":"56","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\dashboard-links.js":"57","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\SignForm.jsx":"58","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\LoginForm.jsx":"59","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\contactPage\\ContactUsForm.jsx":"60","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\ConfirmationModal.jsx":"61","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\SidebarLink.jsx":"62","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\SettingsAPI.js":"63","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseInformation\\CourseInformationForm.jsx":"64","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\CourseBuilder.jsx":"65","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Tap.jsx":"66","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\courseDetailsAPI.js":"67","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseInformation\\RequirementFied.jsx":"68","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\NestedView.jsx":"69","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\SubSecion.jsx":"70"},{"size":660,"mtime":1704465086371,"results":"71","hashOfConfig":"72"},{"size":3132,"mtime":1716559934337,"results":"73","hashOfConfig":"72"},{"size":524,"mtime":1716563703250,"results":"74","hashOfConfig":"72"},{"size":866,"mtime":1708095147542,"results":"75","hashOfConfig":"72"},{"size":931,"mtime":1709479292670,"results":"76","hashOfConfig":"72"},{"size":8176,"mtime":1705943148271,"results":"77","hashOfConfig":"72"},{"size":244,"mtime":1706457488234,"results":"78","hashOfConfig":"72"},{"size":5784,"mtime":1712097571407,"results":"79","hashOfConfig":"72"},{"size":196,"mtime":1709452968988,"results":"80","hashOfConfig":"72"},{"size":6596,"mtime":1710074889585,"results":"81","hashOfConfig":"72"},{"size":3850,"mtime":1710072419488,"results":"82","hashOfConfig":"72"},{"size":3088,"mtime":1716558869273,"results":"83","hashOfConfig":"72"},{"size":765,"mtime":1716541916921,"results":"84","hashOfConfig":"72"},{"size":3946,"mtime":1716404513473,"results":"85","hashOfConfig":"72"},{"size":5270,"mtime":1716629973541,"results":"86","hashOfConfig":"72"},{"size":354,"mtime":1712908482378,"results":"87","hashOfConfig":"72"},{"size":2133,"mtime":1716485578111,"results":"88","hashOfConfig":"72"},{"size":353,"mtime":1712908794484,"results":"89","hashOfConfig":"72"},{"size":1011,"mtime":1686405186000,"results":"90","hashOfConfig":"72"},{"size":604,"mtime":1712902012611,"results":"91","hashOfConfig":"72"},{"size":2962,"mtime":1716487111482,"results":"92","hashOfConfig":"72"},{"size":733,"mtime":1707027437278,"results":"93","hashOfConfig":"72"},{"size":863,"mtime":1716704871877,"results":"94","hashOfConfig":"72"},{"size":612,"mtime":1716529392978,"results":"95","hashOfConfig":"72"},{"size":1307,"mtime":1716818657047,"results":"96","hashOfConfig":"72"},{"size":600,"mtime":1716541973841,"results":"97","hashOfConfig":"72"},{"size":1952,"mtime":1709453866881,"results":"98","hashOfConfig":"72"},{"size":6733,"mtime":1704617415104,"results":"99","hashOfConfig":"72"},{"size":1860,"mtime":1704224095423,"results":"100","hashOfConfig":"72"},{"size":2781,"mtime":1704618574127,"results":"101","hashOfConfig":"72"},{"size":641,"mtime":1716449725362,"results":"102","hashOfConfig":"72"},{"size":216,"mtime":1704223655311,"results":"103","hashOfConfig":"72"},{"size":1524,"mtime":1704224042239,"results":"104","hashOfConfig":"72"},{"size":4140,"mtime":1705946886492,"results":"105","hashOfConfig":"72"},{"size":3175,"mtime":1704220694317,"results":"106","hashOfConfig":"72"},{"size":1054,"mtime":1710681170212,"results":"107","hashOfConfig":"72"},{"size":3223,"mtime":1711274220370,"results":"108","hashOfConfig":"72"},{"size":1113,"mtime":1710679202873,"results":"109","hashOfConfig":"72"},{"size":558,"mtime":1712922239055,"results":"110","hashOfConfig":"72"},{"size":2299,"mtime":1716486456167,"results":"111","hashOfConfig":"72"},{"size":6443,"mtime":1712902169974,"results":"112","hashOfConfig":"72"},{"size":384,"mtime":1707032077784,"results":"113","hashOfConfig":"72"},{"size":2729,"mtime":1716475811519,"results":"114","hashOfConfig":"72"},{"size":257,"mtime":1704379923611,"results":"115","hashOfConfig":"72"},{"size":2709,"mtime":1716351049802,"results":"116","hashOfConfig":"72"},{"size":710,"mtime":1716653655400,"results":"117","hashOfConfig":"72"},{"size":1611,"mtime":1716535395170,"results":"118","hashOfConfig":"72"},{"size":1488,"mtime":1716494616689,"results":"119","hashOfConfig":"72"},{"size":668,"mtime":1716529206830,"results":"120","hashOfConfig":"72"},{"size":2138,"mtime":1684788174000,"results":"121","hashOfConfig":"72"},{"size":4743,"mtime":1684788174000,"results":"122","hashOfConfig":"72"},{"size":130,"mtime":1716445926927,"results":"123","hashOfConfig":"72"},{"size":2861,"mtime":1716542744669,"results":"124","hashOfConfig":"72"},{"size":140,"mtime":1716445911228,"results":"125","hashOfConfig":"72"},{"size":1840,"mtime":1716652246946,"results":"126","hashOfConfig":"72"},{"size":6525,"mtime":1716556952640,"results":"127","hashOfConfig":"72"},{"size":935,"mtime":1684788174000,"results":"128","hashOfConfig":"72"},{"size":8195,"mtime":1710062297697,"results":"129","hashOfConfig":"72"},{"size":3021,"mtime":1709455014447,"results":"130","hashOfConfig":"72"},{"size":5691,"mtime":1716215465112,"results":"131","hashOfConfig":"72"},{"size":543,"mtime":1716350884991,"results":"132","hashOfConfig":"72"},{"size":1002,"mtime":1712302507087,"results":"133","hashOfConfig":"72"},{"size":4088,"mtime":1716536491980,"results":"134","hashOfConfig":"72"},{"size":8897,"mtime":1716642463039,"results":"135","hashOfConfig":"72"},{"size":4483,"mtime":1716745202299,"results":"136","hashOfConfig":"72"},{"size":845,"mtime":1709453383375,"results":"137","hashOfConfig":"72"},{"size":11791,"mtime":1716745179362,"results":"138","hashOfConfig":"72"},{"size":2025,"mtime":1716620625029,"results":"139","hashOfConfig":"72"},{"size":5885,"mtime":1716791588709,"results":"140","hashOfConfig":"72"},{"size":4972,"mtime":1716825828364,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1x7saof",{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"144"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"144"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"144"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"144"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"144"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"144"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"144"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"144"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"144"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"144"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"144"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"144"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"144"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"144"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"144"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"144"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"144"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"144"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"144"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"144"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"144"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"144"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"144"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"144"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"144"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"144"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\index.js",[],["310","311"],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\App.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\reducer\\index.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Login.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\SignUp.js",["312"],"import React, { useEffect } from 'react'\r\nimport Template from '../components/common/Template'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction Signup() {\r\n\r\n\r\n\r\n  const {loading} = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  return (\r\n    \r\n     <div className=' text-white' >\r\n      {\r\n        loading ? \r\n        <div className=' w-[100vw] h-[90vh] flex flex-row mx-auto justify-center items-center' >\r\n          <span className='loader' ></span>\r\n        </div> :\r\n        (\r\n          <div>\r\n            <Template\r\n              heading = \"Join the millions learning to code with StudyNotion for free\"\r\n              subHeading = \"Build skills for today, tomorrow, and beyond. Education to future-proof your career.\"\r\n              formType = \"signForm\"\r\n              btnText = \"Create Account\"\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n\r\n      </div>\r\n     \r\n\r\n    \r\n  )\r\n}\r\n\r\nexport default Signup","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Home.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Error.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\About.js",["313","314","315","316"],"import React from 'react';\r\nimport HighlightText from \"../components/core/Homepage/HighlightText\";\r\nimport Image1 from \"../assets/Images/aboutus1.webp\";\r\nimport Image2 from \"../assets/Images/aboutus2.webp\";\r\nimport Image3 from \"../assets/Images/aboutus3.webp\";\r\nimport Quote from '../components/core/AboutPage/Quote';\r\nimport FoundingStory from \"../assets/Images/FoundingStory.png\";\r\nimport StackComponent from '../components/core/AboutPage/StackComponent';\r\nimport LearningGrid from '../components/core/AboutPage/LearningGrid';\r\nimport ContactFormSection from '../components/core/AboutPage/ContactFormSection';\r\nimport Footer from \"../components/common/Footer\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=' text-white mt-1 mx-auto ' >\r\n        {/* Section 1 */}\r\n        <section className=' bg-richblack-800 pt-20 pb-52 ' >\r\n\r\n            <h1 className=' text-center text-[19px] leading-normal font-inter font-semibold text-richblack-300 mb-16 ' > About Us </h1>\r\n\r\n            <div className=' static ' >\r\n                <div className=\" flex flex-col items-center w-[860px] text-4xl font-semibold mx-auto \" >\r\n                    Driving Innovation in Online Education for a <br/> <HighlightText text={\"Brighter Future\"} />\r\n                    <p className=' text-center text-[17px] leading-normal font-inter font-normal text-richblack-300 mt-4 mb-16 ' >\r\n                        Studynotion is at the forefront of driving innovation in online education. We're passionate about creating a brighter future by offering cutting-edge courses, leveraging emerging technologies, and nurturing a vibrant learning community.\r\n                    </p>\r\n                </div>\r\n                <div className=' absolute bottom-24 left-[12%] w-fit flex gap-x-5 ' >\r\n                    <img src={Image1} />\r\n                    <img src={Image2} />\r\n                    <img src={Image3} />\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n\r\n        {/* Section 2 */}\r\n        <section className=' pt-44 pb-24 border-b-[1px] border-richblack-600 ' >\r\n            <div className=' w-[80%] mx-auto' >\r\n                <Quote/>\r\n            </div>\r\n        </section>\r\n\r\n        {/* Section 3 */}\r\n        <section  className=' py-32 mx-auto '>\r\n            <div className=' w-[80%] mx-auto flex flex-col gap-44' >\r\n                {/* Founding Storin div */}\r\n                <div className='flex flex-row gap-24 ' >\r\n                    \r\n                    <div className=' w-1/2 ' >\r\n                        <h1 className=' text-4xl bg-gradient-to-tl from-rose-600 to-purple-900 font-semibold mb-5 ' >Our Founding Story</h1>\r\n                        <p className=' text-[16px] text-richblack-300 pr-4 ' >\r\n                        Our e-learning platform was born out of a shared vision and passion for transforming education. It all began with a group of educators, technologists, and lifelong learners who recognized the need for accessible, flexible, and high-quality learning opportunities in a rapidly evolving digital world.\r\n                        </p><br/>\r\n                        <p className=' text-[16px] text-richblack-300 pr-4 ' >\r\n                        As experienced educators ourselves, we witnessed firsthand the limitations and challenges of traditional education systems. We believed that education should not be confined to the walls of a classroom or restricted by geographical boundaries. We envisioned a platform that could bridge these gaps and empower individuals from all walks of life to unlock their full potential.\r\n                        </p>\r\n                    </div>\r\n                    <div className=' w-1/2' >\r\n                        <img src={FoundingStory} />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Vison and mission div */}\r\n                <div className='flex flex-row gap-24 ' >\r\n                    {/* Left  */}\r\n                    <div>\r\n                        <h1 className=' text-4xl font-semibold mb-5 '>Our Vision</h1>\r\n                        <p className=' text-[16px] text-richblack-300 pr-4 ' >\r\n                        With this vision in mind, we set out on a journey to create an e-learning platform that would revolutionize the way people learn. Our team of dedicated experts worked tirelessly to develop a robust and intuitive platform that combines cutting-edge technology with engaging content, fostering a dynamic and interactive learning experience.\r\n                        </p>\r\n                    </div>\r\n                    {/* Right */}\r\n                    <div>\r\n                        <h1 className=' text-4xl font-semibold mb-5 '>Our Mission</h1>\r\n                        <p className=' text-[16px] text-richblack-300 pr-4 ' >\r\n                        our mission goes beyond just delivering courses online. We wanted to create a vibrant community of learners, where individuals can connect, collaborate, and learn from one another. We believe that knowledge thrives in an environment of sharing and dialogue, and we foster this spirit of collaboration through forums, live sessions, and networking opportunities.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        {/* Section 4 */} \r\n        <StackComponent/>\r\n\r\n        {/* Section 5 */}\r\n        <section className=' mt-32 mb-[150px] ' >\r\n            <LearningGrid/>\r\n            <div className='w-full' >\r\n                <ContactFormSection/>\r\n            </div>\r\n        </section>\r\n\r\n        {/* Section 6 */}\r\n        <section>\r\n            <h1>Review From other learners</h1>\r\n            {/* <ReviewSlider/> */}\r\n        </section>\r\n\r\n        <Footer/>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\utils\\constants.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\UpdatePassword.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\ForgotPassword.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\VerifyEmail.jsx",["317"],"import React, { useEffect, useState } from \"react\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CTAButton from \"../components/core/Homepage/Botton\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { sendOtp, signUp } from \"../services/operations/authAPI\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaArrowLeftLong } from \"react-icons/fa6\";\r\n\r\nconst VerifyEmail = () => {\r\n  const { loading, signupData } = useSelector((state) => state.auth); // using redux\r\n  const [otp, setOtp] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  // checking for sign up data is present or not ??\r\n  useEffect(() => {\r\n    if (!signupData) navigate(\"/signup\");\r\n  }, []);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      accountType,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n    } = signupData;\r\n\r\n    // console.log(\"signupData --> \", signupData, \"\\n\", otp);\r\n\r\n    dispatch(\r\n      signUp(\r\n        accountType,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        password,\r\n        confirmPassword,\r\n        otp,\r\n        navigate\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\" w-full h-[85vh] flex justify-center items-center mt-7 text-richblack-50 text-[16px] select-none \">\r\n      {loading ? (\r\n        <div className=\" w-[100vw] h-[90vh] flex flex-row mx-auto justify-center items-center\">\r\n          <span className=\"loader\"></span>\r\n        </div>\r\n      ) : (\r\n        <div className=\" w-[508px] flex flex-col py-2 px-9  \">\r\n          <h1 className=\" text-3xl text-richblack-5 font-semibold mb-3 \">\r\n            Verify Email\r\n          </h1>\r\n          <p className=\" text-[17px] text-richblack-200 mb-3\">\r\n            A verification code has been sent to you. Enter the code below\r\n          </p>\r\n\r\n          <form onSubmit={submitHandler}>\r\n            <div>\r\n              <OtpInput\r\n                value={otp}\r\n                onChange={setOtp}\r\n                numInputs={6}\r\n                renderSeparator={<span className=\" p-2 \"></span>}\r\n                renderInput={(props) => (\r\n                  <input {...props} className=\" w-[40px] bg-richblack-800 \" />\r\n                )}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" onClick={submitHandler}>\r\n              <CTAButton>Verify Email</CTAButton>\r\n            </button>\r\n          </form>\r\n\r\n          <div>\r\n            <Link className=\"\" to={\"/login\"}>\r\n              <span className=\"flex flex-row items-center gap-3\">\r\n                <FaArrowLeftLong />\r\n                Back to login\r\n              </span>\r\n            </Link>\r\n\r\n            <button\r\n              onClick={() => {\r\n                dispatch(sendOtp(signupData.email, navigate));\r\n              }}\r\n            >\r\n              Resend it\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\pages\\Dashborad.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\MyProfile.jsx",["318","319","320","321","322"],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Iconbtn from \"../../common/Iconbtn\";\r\nimport { VscAdd, VscEdit, VscPulse, Vscplus } from \"react-icons/vsc\";\r\nimport Botton from \"../Homepage/Botton\";\r\n\r\nfunction MyProfile() {\r\n  const { user } = useSelector((state) => state.profile);\r\n  console.log(\"user1: \", user?.additionalDetails?.about);\r\n\r\n  const { image } = user;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\" text-white w-full flex flex-col gap-9 \">\r\n      {/* Section 1 */}\r\n      <section>\r\n        <h1>My Profile</h1>\r\n        <div>\r\n          <div>\r\n            <img\r\n              src={image}\r\n              className=\" rounded-full w-[78px] aspect-square object-cover \"\r\n            />\r\n            <div>\r\n              <p> {user?.firstName + \" \" + user?.lastName} </p>\r\n              <p> {user?.email} </p>\r\n            </div>\r\n          </div> \r\n\r\n          <div className=\" -mt-8 w-fit  \">\r\n            <Botton active={true} linkto=\"/dashboard/settings\">\r\n              <div className=\"flex flex-row items-center text-[16px] gap-x-2\">\r\n                <p>Edit</p>\r\n                <VscEdit />\r\n              </div>\r\n            </Botton>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Section 2 */}\r\n      {/* api call nahi ho rahi --> additionalDetails undifined b  aa raha hie */}\r\n      <section>\r\n        <div>\r\n          <p>About</p>\r\n          <div className=\" -mt-8 w-fit  \">\r\n            <Botton active={true} linkto=\"/dashboard/settings\">\r\n              <div className=\"flex flex-row items-center text-[16px] gap-x-2\">\r\n                <p>Edit</p>\r\n                <VscEdit />\r\n              </div>\r\n            </Botton>\r\n          </div>\r\n        </div>\r\n        <p>\r\n          {user?.additionalDetails?.about\r\n            ? user?.additionalDetails?.about\r\n            : \"Write something about Yourself\"}\r\n        </p>\r\n      </section>\r\n\r\n      {/* Section 3 */}\r\n      <section>\r\n        <div className=\" flex flex-row items-center justify-between \">\r\n          <p>Personal Details</p>\r\n          <div className=\" -mt-8 w-fit \">\r\n            <Botton active={true} linkto=\"/dashboard/settings\">\r\n              <div className=\"flex flex-row items-center text-[16px] gap-x-2\">\r\n                <p>Edit</p>\r\n                <VscEdit />\r\n              </div>\r\n            </Botton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\" grid grid-cols-2 grid-rows-3 gap-6\">\r\n          <div>\r\n            <p>First Name</p>\r\n            <p> {user?.firstName} </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Last Name</p>\r\n            <p> {user?.lastName} </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Email</p>\r\n            <p> {user?.email} </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Phone Number</p>\r\n            <p>\r\n              {\" \"}\r\n              {user?.additionalDetails?.contactNamber ?? (\r\n                <span className=\"flex flex-row items-center gap-3\">\r\n                  <VscAdd /> Add Phone Number\r\n                </span>\r\n              )}{\" \"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Gender</p>\r\n            <p>\r\n              {\" \"}\r\n              {user?.additionalDetails?.gender ?? (\r\n                <span className=\"flex flex-row items-center gap-3\">\r\n                  <VscAdd /> Add Gender\r\n                </span>\r\n              )}{\" \"}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <p>Date of Birth</p>\r\n            <p>\r\n              {\" \"}\r\n              {user?.additionalDetails?.dateOfBirth ?? (\r\n                <span className=\"flex flex-row items-center gap-3\">\r\n                  <VscAdd /> Add DOB\r\n                </span>\r\n              )}{\" \"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyProfile;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Navbar.jsx",["323","324"],"import React, { useEffect, useState } from \"react\";\r\nimport logo from \"../../assets/Logo/Logo-Full-Light.png\";\r\nimport { NavbarLinks } from \"../../data/navbar-links\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { HiOutlineShoppingCart, HiSearch } from \"react-icons/hi\";\r\nimport ProfileDropDown from \"../core/Auth/ProfileDropDown\";\r\nimport { apiConnector } from \"../../services/apiconnector\";\r\nimport { categories } from \"../../services/api\";\r\nimport { IoIosArrowDown } from \"react-icons/io\";\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n\r\n  const { token } = useSelector((state) => state.auth);\r\n  const { user } = useSelector((state) => state.profile);\r\n  const { totalItems } = useSelector((state) => state.cart);\r\n\r\n  const matchPath = (path) => {\r\n    return path === location.pathname ? true : false;\r\n  };\r\n\r\n  const [subLinks, setSubLinks] = useState([]);\r\n\r\n  const fetchSublinks = async () => {\r\n    try {\r\n      const result = await apiConnector(\"GET\", categories.CATEGORIES_API);\r\n      // console.log( \"Printing Sublinks result: \", result.data.allCategorys);\r\n      setSubLinks(result.data.allCategorys);\r\n    } catch (error) {\r\n      console.log(\"Could Not Fetch The Category List\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSublinks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\" flex h-14 items-center justify-center bg-richblack-800 border-b-[2px] border-b-richblack-700 \">\r\n      <div className=\"flex w-11/12 max-w-maxContent items-center justify-between\">\r\n        {/* img logo */}\r\n        <Link to={\"/\"}>\r\n          <img src={logo} className=\" w-40 \" />\r\n        </Link>\r\n\r\n        {/* nav link */}\r\n        <nav>\r\n          <ul className=\"flex gap-x-6 \">\r\n            {NavbarLinks.map((link, index) => {\r\n              return (\r\n                <li key={index}>\r\n                  {link.title === \"Catalog\" ? (\r\n                    <div className=\" relative text-richblack-50 gap-1 flex items-center group \">\r\n                      <p>{link.title}</p>\r\n                      <IoIosArrowDown className=\" mt-1 text \" />\r\n\r\n                      <div className=\" z-10 invisible absolute left-[10%] top-[45%] translate-x-[-60%] translate-y-[30%] flex flex-col rounded-lg bg-richblack-5 p-4 text-richblack-900 opacity-0 transition-all duration-200 group-hover:visible group-hover:opacity-100 lg:w-[300px] \">\r\n                        <div\r\n                          className=\" absolute left-[68%] translate-x-[100%] translate-y-[-100%]\r\n                                                    h-6 w-6 rotate-45 bg-richblack-5 rounded \"\r\n                        ></div>\r\n\r\n                        {subLinks.length ? (\r\n                          subLinks.map((subLinks, index) => {\r\n                            return (\r\n                              <Link to={`${subLinks.link}`} key={index}>\r\n                                {subLinks.name}\r\n                              </Link>\r\n                            );\r\n                          })\r\n                        ) : (\r\n                          <div></div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <Link to={link?.path}>\r\n                      <p\r\n                        className={` ${\r\n                          matchPath(link.path)\r\n                            ? \" text-yellow-25 \"\r\n                            : \" text-richblack-50 hover:text-richblack-5 duration-200 \"\r\n                        }  `}\r\n                      >\r\n                        {link.title}\r\n                      </p>\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </nav>\r\n\r\n        {/* Login/SignUp/Dashboard */}\r\n        <div className=\" flex gap-x-4 items-center  \">\r\n          {\" \"}\r\n          {/*&&*/}\r\n          {\r\n            <div className=\" flex gap-x-3 text-2xl text-richblack-200 \">\r\n              <span className=\" cursor-pointer \">\r\n                <HiSearch />\r\n              </span>\r\n              <Link to=\"/dashboard/cart\" className=\"relative \">\r\n                <HiOutlineShoppingCart />\r\n                {totalItems > 0 && <span>{totalItems}</span>}\r\n              </Link>\r\n            </div>\r\n          }\r\n          {token === null && (\r\n            <Link to=\"/login\">\r\n              <div className=\" border border-richblack-700 bg-richblack-900 px-[14px] py-[5px] text-richblue-25 rounded-md transition-all duration-200 hover:scale-105 hover:bg-richblack-800 hover:border-richblack-50 hover:text-white  \">\r\n                Log in\r\n              </div>\r\n            </Link>\r\n          )}\r\n          {token === null && (\r\n            <Link to=\"/signup\">\r\n              <div className=\"  border border-richblack-700 bg-richblack-900 px-[14px] py-[5px] text-richblue-25 rounded-md transition-all duration-200 hover:scale-105 hover:bg-richblack-800 hover:border-richblack-50 hover:text-whitess \">\r\n                Sign Up\r\n              </div>\r\n            </Link>\r\n          )}\r\n          {token !== null && <ProfileDropDown />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\OpenRoute.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\EnrolledCourses.jsx",["325","326"],"import ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getUserEnrolledCourses } from \"../../../services/operations/profileAPI\";\r\n\r\nfunction EnrolledCourses() {\r\n  const { token } = useSelector((state) => state.auth);\r\n  const [enrolledCourses, setEnrolledCourses] = useState(null);\r\n\r\n  const getEnrolledCourses = async () => {\r\n    try {\r\n      const response = await getUserEnrolledCourses(token);\r\n      setEnrolledCourses(response);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.log(\"Unable to Fetch Enrolled Course :\\n\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEnrolledCourses();\r\n  }, []);\r\n  return (\r\n    <div className=\" text-white\">\r\n      <h1>Enrolled Courses</h1>\r\n      {\r\n        !enrolledCourses ? ( // enrolledCourse are not present then\r\n          <div>Loading..</div>\r\n        ) : !enrolledCourses.length ? (\r\n          <p>You have not enrolled in any course yet</p> // enrolledCourse ki nahi lenght hie then\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <p>Course Name</p>\r\n              <p>Duration</p>\r\n              <p>Progress</p>\r\n            </div>\r\n\r\n            {/* Cards are shown bellow */}\r\n            {enrolledCourses.map((course, index) => (\r\n              <div>\r\n                <div>\r\n                  <img src={course.thumbnail} />\r\n                  <div>\r\n                    <p> {course.courseName} </p>\r\n                    <p> {course.courseDescription} </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>{course?.totalDuration}</div>\r\n\r\n                <div>\r\n                  <p>Progress: {course.progressPercentage || 0}%</p>\r\n                  <ProgressBar\r\n                    completed={course.progressPercentage || 0}\r\n                    height=\"8px\"\r\n                    isLabelVisible={false}\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) // else consition\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnrolledCourses;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\PrivateRout.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\viewCourseSlice.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\profileSlice.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\cartSlice.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\authSlice.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\slices\\courseSlice.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\index.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\index.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\index.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Template.jsx",["327","328","329","330","331"],"import React, { useState } from 'react'\r\nimport SignForm from '../core/Auth/SignForm'\r\nimport LoginForm from '../core/Auth/LoginForm'\r\nimport CTAButton from '../core/Homepage/Botton'\r\nimport loginImage from \"../../assets/Images/login.webp\"\r\nimport signImage from \"../../assets/Images/signup.webp\"\r\nimport frame from \"../../assets/Images/frame.png\"\r\n\r\n\r\n\r\n\r\nconst accountType = [\r\n    \"Student\",\r\n    \"Intructors\"\r\n]\r\n\r\n\r\nfunction Template( {heading, subHeading, formType, btnText} ) {\r\n\r\n    const [currentTab, setCurrentTab] = useState(accountType[0]);\r\n\r\n    const changeTab = (accountType) => {\r\n        setCurrentTab(accountType);\r\n    }\r\n\r\n  return (\r\n    <div className=' text-richblack-25 w-[100%] max-w-maxContent mx-auto '>\r\n        <div className=' relative w-11/12 flex flex-row mx-auto  justify-between mt-16 mb-24 ' >\r\n            \r\n            {/* form section */}\r\n\r\n            <div className=' w-[40%] ' >\r\n                <div className=' text-richblack-25 mt-12 mb-5 text-4xl font-bold ' >{heading}</div>\r\n\r\n                <div className=' text-richblack-100 mb-8 text-[18px]   ' > {subHeading} </div>\r\n\r\n                {\r\n                    formType === \"loginForm\" ?\r\n                    (<LoginForm btnText = {btnText} />) :\r\n                    (<SignForm btnText = {btnText} />)\r\n                }\r\n\r\n            </div>\r\n\r\n            {/* image section */}\r\n\r\n            <div className=' pl-6 select-none ' >\r\n                <img\r\n                    src={formType === \"loginForm\" ? loginImage : signImage}\r\n                    width={550}\r\n                    height={550}\r\n                    className='absolute left-[51%] top-[1%] '\r\n                />\r\n                <img\r\n                    src={frame}\r\n                    width={550}\r\n                    height={550}\r\n                    className=' mt-5 '\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Template","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Footer.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\LearningLanguageSection.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\CodeBlocks.jsx",["332"],"import React from 'react';\r\nimport CTAButton from \"../Homepage/Botton\";\r\nimport HighlightText from './HighlightText';\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport { TypeAnimation } from 'react-type-animation';\r\n\r\nconst CodeBlocks = ({\r\n\r\n    position,\r\n    heading,\r\n    subheading,\r\n    ctabtn1,\r\n    ctabtn2,\r\n    codeblock,\r\n    backgroundGradient,\r\n    codeColor,\r\n    \r\n}) => {\r\n  return (\r\n    <div className={`flex ${position} my-20 justify-between gap-10 px-5 `}>\r\n\r\n        {/* Section 1 */}\r\n\r\n        <div className=' w-[50%] flex flex-col gap-8'>\r\n        \r\n            {heading}\r\n\r\n            <div className=' font-bold text-richblack-300 '>\r\n                {subheading}\r\n            </div>\r\n            \r\n            {/* two button */}\r\n\r\n            <div className='flex gap-7 mt-7'>\r\n\r\n                <CTAButton active={ctabtn1.active} linkto={ctabtn1.linkto}>\r\n                    <div className=' flex gap-2 items-center'>\r\n                        {ctabtn1.btnText}\r\n                        <FaArrowRight/>\r\n                    </div>\r\n                </CTAButton>\r\n\r\n                <CTAButton active={ctabtn2.active} linkto={ctabtn2.linkto}>\r\n                    {ctabtn2.btnText}\r\n                </CTAButton>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        {/* Section 2 */}\r\n\r\n        <div className=' relative flex h-fit text-10[px] w-[100%] py-4 lg:w-[500px] '>\r\n\r\n            <div className=' absolute bg-richblue-500 opacity-25 left-0 right-0 top-[2%]  rounded-md w-[100%] h-[98%] ' ></div>\r\n\r\n            {/* HW --> BG gradiant */}\r\n            \r\n            {/* Numbers */}\r\n            <div className=' static w-[10%] text-center flex flex-col text-richblack-400 font-inter font-bold '>\r\n                <p>1</p>\r\n                <p>2</p>\r\n                <p>3</p>\r\n                <p>4</p>\r\n                <p>5</p>\r\n                <p>6</p>\r\n                <p>7</p>\r\n                <p>8</p>\r\n                <p>9</p>\r\n                <p>10</p>\r\n                <p>11</p>\r\n            </div>\r\n\r\n            {/* Codes */}\r\n            <div className={ ` static w-[90%] flex flex-col gap-2 font-bold font-mono ${codeColor} ` }>\r\n                <TypeAnimation\r\n                    sequence={[codeblock, 8000, \"\"]}   // 10000 --> 10sec wait after one animation cycle complete \r\n                    repeat={Infinity}\r\n                    cursor={true}\r\n                    omitDeletionAnimation={true}\r\n\r\n                    style={\r\n                        {\r\n                            display: \"block\",\r\n                            whiteSpace: \"pre-line\"\r\n                        }\r\n                    }\r\n\r\n                />\r\n            </div>\r\n\r\n\r\n            \r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CodeBlocks","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\Botton.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\HighlightText.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\InstructorSection.jsx",["333"],"import React from 'react'\r\nimport Instructor from \"../../../assets/Images/Instructor.png\";\r\nimport HighlightText from './HighlightText';\r\nimport CTABotton from './Botton';\r\nimport { FaArrowRight } from 'react-icons/fa';\r\n\r\nfunction InstructorSection() {\r\n  return (\r\n    <div className=' m-16'>\r\n        <div className=' flex flex-row gap-20 items-center '>\r\n\r\n            <div className=' w-[50%] '>\r\n                <img\r\n                    src={Instructor}\r\n                    className=' shadow-white '\r\n                />\r\n            </div>\r\n            <div className=' w-[50%] flex flex-col gap-10 '>\r\n                <div className=' text-4xl font-semibold w-[50%] '>\r\n                    Become an\r\n                    <HighlightText text={\"Instructor\"}/>\r\n                </div>\r\n                <p className=' font-medium text-[16px] w-[80%] text-richblack-300 '>\r\n                    Instructors from around the world teach millions of students on StudyNotion. We provide the tools and skills to teach what you love.\r\n                </p>\r\n\r\n                <div className='w-fit'>\r\n                    <CTABotton active={true} linkto={\"/signup\"}>\r\n\r\n                        <div className=' flex flex-row gap-2 items-center'>\r\n                            Start Learning Today\r\n                            <FaArrowRight/>\r\n                        </div>\r\n\r\n                    </CTABotton>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InstructorSection","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\ExploreMore.jsx",["334","335"],"import React, { useState } from 'react'\r\nimport { HomePageExplore } from '../../../data/homepage-explore';\r\nimport HighlightText from './HighlightText';\r\nimport { IoPeople } from \"react-icons/io5\";\r\nimport { ImTree } from \"react-icons/im\";\r\n\r\n\r\n\r\nconst tabsName = [\r\n\r\n  'Free',\r\n  'New to coding',\r\n  'Most popular',\r\n  'Skills paths',\r\n  'Career paths',\r\n\r\n];\r\n\r\nconst   ExploreMore = () => {\r\n\r\n  // initial value of \r\n  // tab    -> free, \r\n  // course -> course of free tab, \r\n  // card   -> card of particular course\r\n  const [currentTab, setCurrentTab] = useState(tabsName[0]); \r\n  const [courses, setCourses] = useState(HomePageExplore[0].courses);\r\n  const [currentCard, setCurrentCard] = useState(HomePageExplore[0].courses[0].heading);\r\n\r\n  const setMyCards = (element) => {\r\n\r\n    setCurrentTab(element);\r\n\r\n    // filler out HomePageExplore array using element(tabName)\r\n    const tabResult = HomePageExplore.filter((tabs) => (\r\n      tabs.tag === element\r\n    ));\r\n\r\n    setCourses( tabResult[0].courses );\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=' w-[1260px] absolute -top-[350px] -left-[4%] ' >\r\n        <div className=' text-4xl font-semibold text-center '>\r\n          Unlock the \r\n          <HighlightText text={\"Power of Code\"} />\r\n        </div>\r\n\r\n        <p className=' text-center text-richblack-300 text-[18px] mt-1 ' >\r\n          Learn to build anything you can imagine\r\n        </p>\r\n\r\n\r\n        {/* Tab Commponent */}\r\n\r\n        <div className='' >\r\n\r\n          <div className=' w-fit flex flex-row mx-auto mt-7 mb-5 px-1 py-1 gap-3 rounded-full border-richblack-700 border-b-[2px] bg-richblack-800 ' >\r\n            {\r\n              tabsName.map(\r\n                (element, index) => {\r\n                  return (\r\n                    \r\n                    <div\r\n                      className={`text-[16px] flex flex-row items-center \r\n                      ${currentTab === element ? \" bg-richblack-900 text-richblack-5 font-medium \": \" text-richblack-200 \" } \r\n                      rounded-full transition-all duration-200 cursor-pointer hover:text-richblack-5 px-7 py-2 `}\r\n\r\n                      key={index}\r\n                      onClick={\r\n                        () => setMyCards(element)\r\n                      }\r\n                    >\r\n                      {element}\r\n                    </div>\r\n\r\n                  )\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        {/* Card Commponent */}\r\n\r\n        {/* <CourseCard/> Commponent bane ka hie */}\r\n\r\n        <div className=' w-[100%] flex flex-row mt-14 justify-between ' >\r\n          {\r\n            courses.map( (Course, index) => (\r\n              <div\r\n                key={index}\r\n                className=' relative w-[360px] bg-richblack-800 flex flex-col justify-between p-6 '\r\n              >\r\n                <h2 \r\n                  className=' text-richblack-5 text-lg font-bold mb-4 '\r\n                 > {Course.heading} </h2>\r\n                <p\r\n                  className=' text-richblack-300 mb-24 text-[15.5px] '\r\n                > {Course.description} </p>\r\n\r\n                <div className='flex flex-row justify-between text-richblack-200' >\r\n\r\n                  <div className='flex flex-row gap-2  ' >\r\n                    <span>\r\n                      <IoPeople/>\r\n                    </span>\r\n                    <span>\r\n                      {Course.level}\r\n                    </span>\r\n                  </div>\r\n\r\n                  <div className='flex flex-row gap-2' >\r\n                  <span>\r\n                      <ImTree/>\r\n                    </span>\r\n                    <span>\r\n                      {Course.lessionNumber}\r\n                    </span>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                {/* for bordder */}\r\n                <div\r\n                  className=' absolute bottom-14 right-0 w-full h-[10px]  border-richblack-200 border-t-[2px] border-dashed  '\r\n                ></div>\r\n\r\n              </div>\r\n\r\n            ))\r\n          }\r\n\r\n        </div>\r\n\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExploreMore","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Homepage\\TimelineSection.jsx",["336"],"import React from 'react';\r\nimport Logo1 from \"../../../assets/TimeLineLogo/Logo1.svg\";\r\nimport Logo2 from \"../../../assets/TimeLineLogo/Logo2.svg\";\r\nimport Logo3 from \"../../../assets/TimeLineLogo/Logo3.svg\";\r\nimport Logo4 from \"../../../assets/TimeLineLogo/Logo4.svg\";\r\nimport timelineImage from \"../../../assets/Images/TimelineImage.png\"\r\n\r\nconst timeline = [\r\n    {\r\n        Logo: Logo1,\r\n        heading: \"Leadership\",\r\n        Description: \"Fully commited to the success company\",\r\n    },\r\n    {\r\n        Logo: Logo2,\r\n        heading: \"Responsibility\",\r\n        Description: \"Students will always be our top priority\",\r\n    },\r\n    {\r\n        Logo: Logo3,\r\n        heading: \"Flexibility\",\r\n        Description: \"The ability to switch is an important skills\",\r\n    },\r\n    {\r\n        Logo: Logo4,\r\n        heading: \"Solve the problem\",\r\n        Description: \"Code your way to a solution\",\r\n    },\r\n]\r\n\r\nfunction TimelineSection() {\r\n  return (\r\n    <div>\r\n        <div className=' flex flex-row gap-16 items-center '>\r\n\r\n            <div className=' w-[45%] flex flex-col gap-5 '>\r\n                {\r\n                    timeline.map((element, index) => {\r\n                        return (\r\n                            <div className=' flex flex-row gap-6  '>\r\n                                <div className=' w-[50px] h-[50px] bg-white flex rounded-full  justify-center items-center  '>\r\n                                    <img src={element.Logo} className=' flex  ' ></img>\r\n                                </div>\r\n                                <div>\r\n                                    <h2 className=' font-semibold text-[18px] ' >\r\n                                        {element.heading}\r\n                                    </h2>\r\n                                    <p className=' text-base '>\r\n                                        {element.Description}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            <div className=' relative shadow-blue-200 py-10 '>\r\n                <img src={timelineImage}\r\n                    alt='timelineImage'\r\n                    className=' shadow-white w-[150%] object-cover h-fit '\r\n                ></img>\r\n\r\n                <div className=' absolute bg-caribbeangreen-700 flex flex-row text-white uppercase py-10 left-[50%] translate-x-[-50%] translate-y-[-52%] '>\r\n                    <div className='flex flex-row items-center border-r border-caribbeangreen-300 gap-5 px-7'>\r\n                        <p className=' text-3xl font-bold '>10</p>\r\n                        <p className=' text-caribbeangreen-300 text-sm '>Years of Experience</p>\r\n                    </div>\r\n                    <div className=' flex gap-5 items-center px-7 '>\r\n                        <p className=' text-3xl font-bold '>250</p>\r\n                        <p className=' text-caribbeangreen-300 text-sm '>Type of courses</p>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TimelineSection","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\StackComponent.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\LearningGrid.jsx",["337","338"],"import React from 'react';\r\nimport HighlightText from '../Homepage/HighlightText';\r\nimport Botton from '../Homepage/Botton';\r\n\r\nconst LearningGridArray = [\r\n    {\r\n      order: -1,\r\n      heading: \"World-Class Learning for\",\r\n      highlightText: \"Anyone, Anywhere\",\r\n      description:\r\n        \"Studynotion partners with more than 275+ leading universities and companies to bring flexible, affordable, job-relevant online learning to individuals and organizations worldwide.\",\r\n      BtnText: \"Learn More\",\r\n      BtnLink: \"/\",\r\n    },\r\n    {\r\n      order: 1,\r\n      heading: \"Curriculum Based on Industry Needs\",\r\n      description:\r\n        \"Save time and money! The Belajar curriculum is made to be easier to understand and in line with industry needs.\",\r\n    },\r\n    {\r\n      order: 2,\r\n      heading: \"Our Learning Methods\",\r\n      description:\r\n        \"Studynotion partners with more than 275+ leading universities and companies to bring\",\r\n    },\r\n    {\r\n      order: 3,\r\n      heading: \"Certification\",\r\n      description:\r\n        \"Studynotion partners with more than 275+ leading universities and companies to bring\",\r\n    },\r\n    {\r\n      order: 4,\r\n      heading: `Rating \"Auto-grading\"`,\r\n      description:\r\n        \"Studynotion partners with more than 275+ leading universities and companies to bring\",\r\n    },\r\n    {\r\n      order: 5,\r\n      heading: \"Ready to Work\",\r\n      description:\r\n        \"Studynotion partners with more than 275+ leading universities and companies to bring\",\r\n    },\r\n];\r\n\r\nfunction LearningGrid() {\r\n  return (\r\n    <div className=' w-[80%] mx-auto grid items-center lg:grid-cols-4 mb-10' >\r\n        {\r\n            LearningGridArray.map( (item, index)=> (\r\n                <div\r\n                    className={`\r\n                    ${index === 0 && \" col-span-2 \" }\r\n                    ${ item.order & 1 === 1 ? \" bg-richblack-800 \" : \" bg-richblack-700 \" }\r\n                    ${ item.order == 3 && \" col-start-2 \" }\r\n                    `}\r\n                >\r\n                    {\r\n                        item.order < 0 ?\r\n                        (<div className=\" h-[310px] bg-richblack-900 pt-5 pl-4 pr-4  \">\r\n                            <h1 className=' text-4xl mb-5 ' >\r\n                                {item.heading} <br/>\r\n                                <HighlightText text={item.highlightText} className=\"\" />\r\n                            </h1>\r\n                            <p className=' text-[17px] text-richblack-200 mb-12 ' >\r\n                                {item.description}\r\n                            </p>\r\n                            <div className=' w-fit' >\r\n                                <Botton children={item.BtnText} linkto={item.BtnLink} active={true}  />\r\n                            </div>\r\n\r\n                        </div>) :\r\n                        (<div className='h-[310px] pt-7 pl-6 pr-9 ' >\r\n                            <h1 className=' text-xl mb-5 ' > {item.heading} </h1>\r\n                            <p className=' text-[17px] text-richblack-200 '> {item.description} </p>\r\n                        </div>)\r\n                    }\r\n                </div>\r\n            ) )\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LearningGrid","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\Quote.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\AboutPage\\ContactFormSection.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\profileAPI.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\authAPI.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\apiconnector.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\api.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\navbar-links.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Sidebar.jsx",["339"],"import React, { useState } from \"react\";\r\nimport { logout } from \"../../../services/operations/authAPI\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport SidebarLink from \"./SidebarLink\";\r\nimport { sidebarLinks } from \"../../../data/dashboard-links\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { VscSignOut } from \"react-icons/vsc\";\r\nimport ConfirmationModal from \"../../common/ConfirmationModal\";\r\n\r\nfunction Sidebar() {\r\n  const { loading: authLoading } = useSelector((state) => state.auth);\r\n  const { user, loading: profileLoading } = useSelector(\r\n    (state) => state.profile\r\n  );\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [confirmationModal, setConfirmationModal] = useState(null);\r\n\r\n  const data = {\r\n    text1: \"Are you sure?\",\r\n    text2: \"You wiil be logged out from your account?\",\r\n    btn1Text: \"Logout\",\r\n    btn2Text: \"Cancel\",\r\n    btn1Handler: () => dispatch(logout(navigate)),\r\n    btn2Handler: () => setConfirmationModal(null),\r\n  };\r\n\r\n  if (authLoading || profileLoading) {\r\n    return (\r\n      <div className=\" h-[88vh] text-white flex justify-center \">\r\n        <div className=\"loader\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function confirmationHandler() {\r\n    setConfirmationModal(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"flex min-w-[222px] flex-col border-r-[1px] border-richblack-700 h-[calc[100vh - 3.5rem]] bg-richblack-800 \">\r\n        <div className=\"flex flex-col\">\r\n          {sidebarLinks.map((link) => {\r\n            // console.log(\"------->\",link.type);\r\n            // ( undifined != undifined ) is false statement\r\n            if (link.type && user?.accountType != link.type) return null;\r\n            return (\r\n              <SidebarLink link={link} iconName={link.icon} key={link.id} />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\" mx-auto mt-6 w-11/12 mb-5 border-t-[1px] border-richblack-600 \"></div>\r\n\r\n        {/* Setting */}\r\n        <SidebarLink\r\n          className=\" absolute -left-[22px]\"\r\n          link={{\r\n            name: \"Settings\",\r\n            path: \"dashboard/settings\",\r\n          }}\r\n          iconName=\"VscSettingsGear\"\r\n        />\r\n\r\n        {/* Logout */}\r\n        <button\r\n          onClick={confirmationHandler}\r\n          className=\"text-sm font-medium text-richblack-300 ml-[32px]\"\r\n        >\r\n          <div className=\"flex items-center gap-x-2\">\r\n            <VscSignOut className=\" text-lg\" />\r\n            <span>Logout</span>\r\n          </div>\r\n        </button>\r\n      </div>\r\n\r\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Iconbtn.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\ProfileDropDown.jsx",["340","341"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { FaChevronDown } from \"react-icons/fa\";\r\nimport { logout } from \"../../../services/operations/authAPI\";\r\n\r\nfunction ProfileDropDown() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user } = useSelector((state) => state.profile);\r\n  console.log(\"user = \", user?.image);\r\n\r\n  const [showMenue, setShowMenue] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        setShowMenue(!showMenue);\r\n      }}\r\n      className=\" relative flex items-center gap-1  \"\r\n    >\r\n      <img\r\n        width={27}\r\n        className=\"aspect-square rounded-full object-cover\"\r\n        src={user?.image}\r\n      />\r\n\r\n      <div className=\" text-richblack-200 font-medium cursor-pointer \">\r\n        <FaChevronDown />\r\n      </div>\r\n\r\n      <div\r\n        className={` flex flex-col content-start z-50 ${\r\n          !showMenue ? \" opacity-0 \" : \" opacity-100 \"\r\n        } bg-richblack-800 text-richblack-100 absolute top-10 -left-3 border-[1px] rounded-md px-4 py-2 border-richblack-600 `}\r\n      >\r\n        <div\r\n          className=\" w-full cursor-pointer\"\r\n          onClick={() => {\r\n            navigate(\"/dashboard/my-profile\");\r\n          }}\r\n        >\r\n          Dashboard\r\n        </div>\r\n        <div\r\n          className=\"cursor-pointer \"\r\n          onClick={() => dispatch(logout(navigate))}\r\n        >\r\n          LogOut\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileDropDown;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\RenderCartCourses.jsx",["342"],"import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FaRegStar, FaStar } from \"react-icons/fa\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { removeFromCart } from \"../../../../slices/cartSlice\";\r\n\r\nfunction RenderCartCourses() {\r\n  const { cart } = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div>\r\n      {cart.map((course, index) => (\r\n        <div>\r\n          <div>\r\n            <img src={course?.thumbnail} />\r\n            <div>\r\n              <p>{course?.courseName}</p>\r\n              <p>{course?.category?.name}</p>\r\n              <div>\r\n                <span>4.8</span>\r\n                <ReactStars\r\n                  count={5}\r\n                  size={20}\r\n                  edit={false}\r\n                  activeColor=\"#ffd700\"\r\n                  emptyIcon={<FaRegStar />}\r\n                  filledIcon={<FaStar />}\r\n                />\r\n\r\n                <span>{course?.ratingAndReviews?.length}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n                <button onClick={()=>dispatch(removeFromCart(course._id))}>\r\n                    <RiDeleteBin6Line/>\r\n                    <span>Remove</span>\r\n                </button>\r\n                <p>Rs {course?.price} </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderCartCourses;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Cart\\RenderTotalAmount.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\footer-links.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\homepage-explore.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\DeleteAccount.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\ChangeProfilePicture.jsx",["343","344"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MdOutlineFileUpload } from \"react-icons/md\";\r\nimport { changeProfilePicture } from \"../../../../services/operations/SettingsAPI\";\r\n\r\nfunction ChangeProfilePicture() {\r\n  const { user } = useSelector((state) => state.profile);\r\n  const { token } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const inputFile = useRef(null);\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const [previewSource, setPreviewSource] = useState(null);\r\n\r\n  const clickHandler = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  function changeHandler(e) {\r\n    const file = e.target.files[0];\r\n    console.log(file);\r\n    if (file) {\r\n      setImgFile(file);\r\n      previewFile(file);\r\n    }\r\n  }\r\n\r\n  function previewFile(file) {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result); // it store source url of the file\r\n    };\r\n  }\r\n\r\n  function handleFileUpload() {\r\n    try {\r\n      console.log(\"Uploading....\");\r\n      const formData = new FormData();\r\n      console.log(\"formData: \\n\", formData);\r\n\r\n      formData.append(\"displayPicture\", imgFile); // append function take input as key-value paire\r\n\r\n      console.log(\"formData: \\n\", formData.files);\r\n      dispatch(changeProfilePicture(token, formData));\r\n    } catch (error) {\r\n      console.log(\"ERROR MESSAGE in handleFileUpload - \", error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (imgFile) previewFile(imgFile);\r\n  }, [imgFile]);\r\n\r\n  return (\r\n    <div className=\"flex flex-row items gap-x-3 rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-8 px-12 text-richblack-5\">\r\n      <img\r\n        className=\"aspect-square w-[78px] rounded-full object-cover\"\r\n        src={user?.image}\r\n      />\r\n\r\n      <div className=\" flex flex-col gap-3\">\r\n        <h3>Change Profile Picture</h3>\r\n\r\n        <div className=\" flex items-center gap-x-4 text-[16px]\">\r\n          <input\r\n            type=\"file\"\r\n            ref={inputFile}\r\n            className=\" hidden\"\r\n            onChange={changeHandler}\r\n            accept=\"image/png, image/gif, image/jpeg\"\r\n          />\r\n\r\n          <div\r\n            className=\" bg-richblack-700 text-[16px] text-richblack-200 font-semibold px-3 py-1 rounded-md \"\r\n            onClick={clickHandler}\r\n          >\r\n            Select\r\n          </div>\r\n\r\n          <div\r\n            onClick={handleFileUpload}\r\n            className=\"flex gap-x-2 items-center bg-yellow-50 text-black text-[16px] font-semibold px-2 py-1 rounded-md\"\r\n          >\r\n            <p>Upload</p>\r\n            <MdOutlineFileUpload />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChangeProfilePicture;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\UpdatePassword.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\RenderSteps.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\Setting\\EditProfile.jsx",["345","346","347"],"import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Iconbtn from \"../../../common/Iconbtn\";\r\n\r\nconst genders = [\"Male\", \"Female\", \"Non-Binary\", \"Prefer not to say\", \"Other\"];\r\n\r\nfunction EditProfile() {\r\n  const { user } = useSelector((state) => state.profile);\r\n  const { token } = useSelector((state) => state.auth);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div>\r\n          <h2>Profile Information</h2>\r\n\r\n          <div className=\"flex justify-between gap-3\">\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"firstName\" className=\" lable-style\">\r\n                First Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                id=\"firstName\"\r\n                placeholder=\"Enter first name\"\r\n                className=\"form-style\"\r\n                {...register(\"firstName\", { require: true })}\r\n                defaultValue={user?.firstName}\r\n              />\r\n              {errors.firstName && (\r\n                <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n                  Please enter your first name.\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"lastName\" className=\" lable-style\">\r\n                Last Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"last\"\r\n                id=\"last\"\r\n                placeholder=\"Enter last name\"\r\n                className=\"form-style\"\r\n                {...register(\"lastName\", { require: true })}\r\n                defaultValue={user?.lastName}\r\n              />\r\n              {errors.lastName && (\r\n                <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n                  Please enter your last name.\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between gap-3\">\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"dateOfBirth\" className=\"lable-style\">\r\n                Date of Birth\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                name=\"dateOfBirth\"\r\n                id=\"dateOfBirth\"\r\n                className=\"form-style\"\r\n                {...register(\"dateOfBirth\", {\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please enter your Date of Birth.\",\r\n                  },\r\n                  max: {\r\n                    value: new Date().toISOString().split(\"T\")[0],\r\n                    message: \"Date of Birth Cannot be in the future.\",\r\n                  },\r\n                })}\r\n                defaultValue={user?.additionalDetails?.dateOfBirth}\r\n              />\r\n              {errors.dateOfBirth && (\r\n                <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n                  {errors.dateOfBirth.message}\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"gender\" className=\"lable-style\">\r\n                Gender\r\n              </label>\r\n              <select\r\n                type=\"text\"\r\n                name=\"gender\"\r\n                id=\"gender\"\r\n                className=\"form-style\"\r\n                {...register(\"gender\", { required: true })}\r\n                defaultValue={user?.additionalDetails?.gender}\r\n              >\r\n                {genders.map((elem, index) => (\r\n                  <option value={elem} key={index}>\r\n                    {elem}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n              {errors.gender && <span>Please select your gender</span>}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-between gap-3\">\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"contactNumber\" className=\"lable-style\">\r\n                Contact Number\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"contactNumber\"\r\n                id=\"contactNumber\"\r\n                className=\"form-style\"\r\n                placeholder=\"Enter contact number\"\r\n                {...register(\"contactNumber\", {\r\n                  required: {\r\n                    value: true,\r\n                    message: \"Please enter your Contact Number\",\r\n                  },\r\n                  maxLength: { value: 12, message: \"Invalid Phone Number\" },\r\n                  minLenght: { value: 10, message: \"Invalid Phone Number\" },\r\n                })}\r\n                defaultValue={user?.additionalDetails?.contactNumber}\r\n              />\r\n              {errors.contactNumber && (\r\n                <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n                  {errors.contactNumber.message}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"flex flex-col gap-2 w-full\">\r\n              <label htmlFor=\"about\" className=\"lable-style\">\r\n                About\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"about\"\r\n                id=\"about\"\r\n                placeholder=\"Enter Bio Details\"\r\n                className=\"form-style\"\r\n                {...register(\"about\", { required: true })}\r\n                defaultValue={user?.additionalDetails?.about}\r\n              />\r\n              {errors.about && (\r\n                <span className=\"-mt-1 text-[12px] text-yellow-100\">\r\n                  Please enter your About.\r\n                </span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-end gap-2 mt-4\">\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"/dashboard/my-profile\");\r\n            }}\r\n            className=\"cursor-pointer rounded-md bg-richblack-700 py-2 px-5 font-semibold text-richblack-50\"\r\n          >\r\n            cancle\r\n          </button>\r\n\r\n          <Iconbtn type=\"submit\" text=\"Save\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\data\\dashboard-links.js",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\SignForm.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Auth\\LoginForm.jsx",["348","349","350"],"import React, { useState } from 'react'\r\nimport { Form, Link, useNavigate } from 'react-router-dom'\r\nimport { FaRegEye, FaRegEyeSlash } from \"react-icons/fa\";\r\nimport CTAButton from '../Homepage/Botton';\r\nimport { apiConnector } from '../../../services/apiconnector';\r\nimport { user } from '../../../services/api';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../../services/operations/authAPI';\r\n\r\nfunction LoginForm( {btnText} ) {\r\n\r\n  const [isText, setIsText] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  function changeViwe (){\r\n    setIsText( !isText );\r\n  }\r\n\r\n  const [formData, setFormData] = useState( {\r\n\r\n    email: \"\",\r\n    password: \"\",\r\n\r\n  } );\r\n\r\n  const { email, password } = formData;\r\n\r\n  function changeFormData(event)\r\n  {\r\n    setFormData( \r\n      (pevData) => (\r\n        {\r\n          ...pevData,\r\n          [event.target.name]: event.target.value,\r\n        }\r\n      ) \r\n     )\r\n  }\r\n\r\n  const loginHandler = async (event) =>{\r\n    event.preventDefault();\r\n    dispatch( login(email, password, navigate) );\r\n  }\r\n\r\n  return (\r\n    <div className=' mt-5 text-richblack-25 select-none ' >\r\n\r\n      <form className='flex flex-col gap-2 ' >\r\n\r\n        <label>\r\n          Email Address <sup className='text-pink-500' >*</sup>\r\n        </label>\r\n\r\n        <input\r\n          required\r\n          name='email'\r\n          type='email'\r\n          placeholder='@gmail.com'\r\n          className=' bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3 '\r\n          onChange={changeFormData}\r\n        ></input>\r\n\r\n        <label>\r\n          Password <sup className=' text-pink-500 ' >*</sup>\r\n        </label>\r\n\r\n        <div className='relative' >\r\n        \r\n          <input\r\n            required\r\n            name='password'\r\n            type={isText?\"text\":\"password\"}\r\n            placeholder=' Enter Password '\r\n            className=' w-full bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-0 '\r\n            onChange={changeFormData}\r\n          ></input>\r\n\r\n          <div className=' absolute right-[3%] top-[33%] hover:cursor-pointer  text-richblack-200 hover:text-richblack-50 ' \r\n            onClick={changeViwe}\r\n          >\r\n            {\r\n              isText && <FaRegEyeSlash className=' w-[20px] ' />\r\n            }\r\n            {\r\n              !isText && <FaRegEye className=' w-[20px] ' />\r\n            }\r\n          </div>\r\n          \r\n        </div>\r\n\r\n        <Link to={\"/forgotpassword\"} >\r\n          <div className=' flex flex-row-reverse text-blue-500 text-xs select-none hover:cursor-pointer hover:text-blue-400  ' >Forget Password</div>\r\n        </Link>\r\n\r\n        <button onClick={loginHandler} >\r\n          <CTAButton\r\n              children = {btnText}\r\n              active = {true}\r\n              linkto= \"\"\r\n          />\r\n        </button>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\contactPage\\ContactUsForm.jsx",["351"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Botton from \"../core/Homepage/Botton\";\r\nimport CountryCode from \"../../data/countrycode.json\";\r\n\r\nfunction ContactUsForm() {\r\n  const [loading, setLoading] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors, isSubmitSuccessful },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (isSubmitSuccessful) {\r\n      reset({\r\n        email: \"\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        message: \"\",\r\n        phonenumber: \"\",\r\n      });\r\n    }\r\n  }, [reset, isSubmitSuccessful]);\r\n\r\n  const submitContactForm = async (data) => {\r\n    console.log(\"Logging Data\", data);\r\n    try {\r\n      setLoading(true);\r\n      // const response = await apiConnector(\"POST\", contactu) // --> Incomplete hie\r\n      const response = {\r\n        status: \"OK\",\r\n      };\r\n      console.log(\"Logging response\", response);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Error: \", error.message);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submitContactForm)}>\r\n      <div className=\"flex flex-row justify-between gap-4\">\r\n        {/* firstName */}\r\n        <div className=\"flex flex-col gap-2 w-full mb-4 text-[16px] text-richblack-50 \">\r\n          <label htmlFor=\"firstname\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"firstname\"\r\n            name=\"firstname\"\r\n            className=\"  bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3 \"\r\n            placeholder=\"Enter first name\"\r\n            {...register(\"firstname\", { required: true })}\r\n          />\r\n          {errors.firstname && <span>Please Enter Your Name</span>}\r\n        </div>\r\n\r\n        {/* lastName */}\r\n        <div className=\"flex flex-col gap-2 w-full mb-4 text-[16px] text-richblack-50\">\r\n          <label htmlFor=\"lastname\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"lastname\"\r\n            name=\"lastname\"\r\n            className=\" bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3 \"\r\n            placeholder=\"Enter first name\"\r\n            {...register(\"lastname\")}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* email */}\r\n      <div className=\"flex flex-col gap-2 mb-4 text-[16px] text-richblack-50\">\r\n        <label htmlFor=\"email\">Email Address</label>\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          className=\"  bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3 \"\r\n          placeholder=\"Enter email Address\"\r\n          {...register(\"email\", { required: true })}\r\n        />\r\n        {errors.email && <span>Please Enter your email Address</span>}\r\n      </div>\r\n\r\n      {/* Phone No. */}\r\n      <div className=\"flex flex-col gap-2 mb-4 text-[16px] text-richblack-50\">\r\n        <label htmlFor=\"phonenumber\">Phone Number</label>\r\n\r\n        <div className=\" flex flex-row gap-2\">\r\n          {/* dropdown */}\r\n          <select\r\n            name=\"dropdown\"\r\n            id=\"dropdown\"\r\n            className=\"  bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3  w-[20%] \" // w-[25%] --> yaha fasa tha --> parent div remove karna pada\r\n            {...register(\"contyCodeDropdown\", { required: true })}\r\n          >\r\n            {CountryCode.map((element, index) => {\r\n              return (\r\n                <option key={index} value={element.code}>\r\n                  {element.code} - {element.country}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n\r\n          {/* phone no. div */}\r\n          <input\r\n            type=\"number\"\r\n            name=\"phonenumber\"\r\n            id=\"phonenumber\"\r\n            placeholder=\"12345 67890\"\r\n            className=\"  bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3  w-[80%]\" // w-[76%] --> yaha fasa tha --> iska bee parent div remove karna pada\r\n            {...register(\r\n              \"phonenumber\", // registor as\r\n              {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter Phone No.\",\r\n                },\r\n                maxLength: {\r\n                  value: 10,\r\n                  message: \"Invalid Phone Number\",\r\n                },\r\n                minLength: {\r\n                  value: 10,\r\n                  message: \"Invalid Phone Number\",\r\n                },\r\n              }\r\n            )}\r\n          />\r\n        </div>\r\n        {errors.phonenumber && <span>{errors.phonenumber.message}</span>}\r\n      </div>\r\n\r\n      {/* message  */}\r\n      <div className=\"flex flex-col gap-2  mb-4` text-[16px] text-richblack-50\">\r\n        <label htmlFor=\"message\">Message</label>\r\n        <textarea\r\n          name=\"message\"\r\n          id=\"message\"\r\n          className=\" bg-richblack-800 rounded-lg text-[17px] p-2 text-richblack-50 border-b-[2px] border-richblack-700 mb-3 \"\r\n          cols={30}\r\n          rows={7}\r\n          placeholder=\"Enter Your message here\"\r\n          {...register(\"message\", { required: true })}\r\n        />\r\n        {errors.message && <span>Please enter your messasge</span>}\r\n      </div>\r\n\r\n      <button\r\n        type=\"submit\"\r\n        onClick={handleSubmit(submitContactForm)}\r\n        className=\"w-full\"\r\n      >\r\n        <Botton active={true} children={\"Send message\"} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactUsForm;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\ConfirmationModal.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\SidebarLink.jsx",["352"],"import React from 'react';\r\nimport * as Icons from \"react-icons/vsc\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction SidebarLink({link, iconName}) {\r\n\r\n  const Icon = Icons[iconName];\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const matchRoute = (path) => {\r\n    return location.pathname === path ? true : false;\r\n  };\r\n\r\n  return (\r\n\r\n    <NavLink \r\n      to={link.path}\r\n      className={` relative px-8 py-2 text-sm font-medium ${matchRoute(link.path) ? \" bg-yellow-800 \" : \" bg-opacity-0  \"} `} \r\n    >\r\n\r\n      <span className={` absolute left-0 top-0 h-full w-[0.2rem] bg-yellow-50 ${ matchRoute(link.path) ? \"opacity-100 \" : \"opacity-0 \"} `} >\r\n      </span>\r\n\r\n      <div className='flex text-white items-center gap-x-2' >\r\n        <Icon className = \" text-lg \" />\r\n        <div>\r\n          {link.name}\r\n        </div>\r\n      </div> \r\n\r\n    </NavLink>\r\n    \r\n  )\r\n}\r\n\r\nexport default SidebarLink","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\SettingsAPI.js",["353"],"import toast from \"react-hot-toast\";\r\nimport { setUser } from \"../../slices/profileSlice\";\r\nimport { apiConnector } from \"../apiconnector\";\r\nimport { user } from \"../api\";\r\nimport { profileEndPoint } from \"../api\";\r\nimport { logout } from \"./authAPI\";\r\n\r\nconst {\r\n  CHANGE_PROFILE_PICTURE_API,\r\n  UPDATE_PROFILE_API,\r\n  DELETE_PROFILE_API,\r\n  CHANGE_PASSWORD_API,\r\n} = profileEndPoint;\r\n\r\nexport function changeProfilePicture(token, formData) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Uploading...\");\r\n\r\n    try {\r\n      // console.log(\"imgFile->changeDP \", imgFile);\r\n      // console.log(\"user->changeDP \", user);\r\n      const response = await apiConnector(\r\n        // Backend api call hoga and db mai display picture ko update karega\r\n        \"PUT\",\r\n        CHANGE_PROFILE_PICTURE_API,\r\n        formData,\r\n        {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n          Authorisation: `Bearer ${token}`,\r\n        }\r\n      );\r\n      console.log(\r\n        \"UPDATE_DISPLAY_PICTURE_API API RESPONSE............\",\r\n        response\r\n      );\r\n\r\n      if (!response.data.success) throw new Error(response.data.message);\r\n\r\n      toast.success(\"Uploaded Successful\");\r\n      dispatch(setUser(response.data.data)); // setUser update the value of user in localstorage or slice\r\n    } catch (error) {\r\n      console.log(\r\n        \"CHANGE_PROFILE_PICTURE_API Error........\",\r\n        error.response.data\r\n      );\r\n      toast.error(\"Could Not Update Display Picture\");\r\n    }\r\n\r\n    toast.dismiss(toastId);\r\n  };\r\n}\r\n\r\nexport function updateProfile(token, formData) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\");\r\n    try {\r\n      const response = await apiConnector(\"PUT\", UPDATE_PROFILE_API, formData, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      console.log(\"UPDATE_PROFILE_API API RESPONSE............\", response);\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message);\r\n      }\r\n\r\n      const userImage = response.data.updatedUserDetails.image\r\n        ? response.data.updatedUserDetails.image\r\n        : `https://api.dicebear.com/5.x/initials/svg?seed=${response.data.updatedUserDetails.firstName} ${response.data.updatedUserDetails.lastName}`;\r\n\r\n      dispatch(\r\n        setUser({\r\n          ...response.data.updatedUserDetails,\r\n          image: userImage,\r\n        })\r\n      );\r\n      toast.success(\"Profile Updated Successfully\");\r\n    } catch (error) {\r\n      console.log(\"UPDATE_PROFILE_API API ERROR............\", error);\r\n      toast.error(\"Could Not Update Profile\");\r\n    }\r\n    toast.dismiss(toastId);\r\n  };\r\n}\r\n\r\nexport async function changePassword(token, formData) {\r\n  const toastId = toast.loading(\"Loading...\");\r\n  try {\r\n    const response = await apiConnector(\"POST\", CHANGE_PASSWORD_API, formData, {\r\n      Authorization: `Bearer ${token}`,\r\n    });\r\n    console.log(\"CHANGE_PASSWORD_API API RESPONSE............\", response);\r\n\r\n    if (!response.data.success) {\r\n      throw new Error(response.data.message);\r\n    }\r\n    toast.success(\"Password Changed Successfully\"); // user password is not stored in local storage. It only store in DB\r\n  } catch (error) {\r\n    console.log(\"CHANGE_PASSWORD_API API ERROR............\", error);\r\n    toast.error(error.response.data.message);\r\n  }\r\n  toast.dismiss(toastId);\r\n}\r\n\r\nexport function deleteProfile(token, navigate) {\r\n  return async (dispatch) => {\r\n    const toastId = toast.loading(\"Loading...\");\r\n    try {\r\n      const response = await apiConnector(\"DELETE\", DELETE_PROFILE_API, null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n      console.log(\"DELETE_PROFILE_API API RESPONSE............\", response);\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message);\r\n      }\r\n      toast.success(\"Profile Deleted Successfully\");\r\n      dispatch(logout(navigate));\r\n    } catch (error) {\r\n      console.log(\"DELETE_PROFILE_API API ERROR............\", error);\r\n      toast.error(\"Could Not Delete Profile\");\r\n    }\r\n    toast.dismiss(toastId);\r\n  };\r\n}\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseInformation\\CourseInformationForm.jsx",["354"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addCourseDetails,\r\n  editCourseDetails,\r\n  fetchCourseCategories,\r\n} from \"../../../../../services/operations/courseDetailsAPI\";\r\nimport { HiOutlineCurrencyRupee } from \"react-icons/hi\";\r\nimport RequirementFied from \"./RequirementFied\";\r\nimport { setCourse, setStep } from \"../../../../../slices/courseSlice\";\r\nimport Iconbtn from \"../../../../common/Iconbtn\";\r\nimport toast from \"react-hot-toast\";\r\nimport { COURSE_STASTUS } from \"../../../../../utils/constants\";\r\n\r\nfunction CourseInformationForm() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const { course, editCourse, step } = useSelector((state) => state.course);\r\n  const { token } = useSelector((state) => state.auth);\r\n\r\n  const [loading, setLoading] = useState();\r\n  const [courseCategories, setCourseCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCategories = async () => {\r\n      setLoading(true);\r\n      const categories = await fetchCourseCategories();\r\n      if (categories !== undefined) setCourseCategories(categories);\r\n      setLoading(false);\r\n    };\r\n    getCategories();\r\n    if (editCourse) {\r\n      setValue(\"courseTitle\", course.courseName);\r\n      setValue(\"courseShortDesc\", course.courseDescription);\r\n      setValue(\"coursePrice\", course.price);\r\n      setValue(\"courseTags\", course.tag);\r\n      setValue(\"courseBenefits\", course.whatYouWillLearn);\r\n      setValue(\"courseCategory\", course.category);\r\n      setValue(\"courseRequirements\", course.instruction);\r\n      setValue(\"courseImage\", course.thumbnail);\r\n    }\r\n  }, []);\r\n\r\n  function isFormUpdate() {\r\n    const currentVal = getValues();\r\n    if (\r\n      currentVal.courseTitle !== course.courseName ||\r\n      currentVal.courseShortDesc !== course.courseDescription ||\r\n      currentVal.coursePrice !== course.price ||\r\n      // currentVal.courseTags !== course.tag ||\r\n      // currentVal.courseImage !== course.thumbnail ||\r\n      currentVal.courseBenefits !== course.whatYouWillLearn ||\r\n      currentVal.courseCategory._id !== course.category._id ||\r\n      currentVal.courseRequirements !== course.instruction\r\n    )\r\n      return true;\r\n    else return false;\r\n  }\r\n\r\n  const onSubmit = async (data) => {\r\n    if (editCourse) {\r\n      if (isFormUpdate) {\r\n        const currentValues = getValues();\r\n        const formData = new FormData();\r\n\r\n        formData.append(\"courseId\", course._id);\r\n\r\n        if (currentValues.courseTitle !== course.courseName) {\r\n          formData.append(\"courseName\", data.courseTitle);\r\n        }\r\n\r\n        if (currentValues.courseShortDesc !== course.courseDescription) {\r\n          formData.append(\"courseDescription\", data.courseShortDesc);\r\n        }\r\n\r\n        if (currentValues.coursePrice !== course.price) {\r\n          formData.append(\"price\", data.coursePrice);\r\n        }\r\n\r\n        if (currentValues.courseBenefits !== course.whatYouWillLearn) {\r\n          formData.append(\"whatYouWillLearn\", data.courseBenefits);\r\n        }\r\n\r\n        if (currentValues.courseCategory._id !== course.category._id) {\r\n          formData.append(\"category\", data.courseCategory);\r\n        }\r\n\r\n        if (\r\n          currentValues.courseRequirements.toString() !==\r\n          course.instruction.toString()\r\n        ) {\r\n          formData.append(\r\n            \"instruction\",\r\n            JSON.stringify(data.courseRequirements)\r\n          );\r\n        }\r\n\r\n        setLoading(true);\r\n        const result = await editCourseDetails(formData, token);\r\n        setLoading(false);\r\n\r\n        if (result) {\r\n          dispatch(setStep(2));\r\n          dispatch(setCourse(result));\r\n        }\r\n      } else toast.error(\"NO Changes made so far\");\r\n\r\n      return;\r\n    }\r\n\r\n    //create a new course\r\n    const formData = new FormData();\r\n    formData.append(\"courseName\", data.courseTitle);\r\n    formData.append(\"courseDescription\", data.courseShortDesc);\r\n    formData.append(\"price\", data.coursePrice);\r\n    formData.append(\"whatYouWillLearn\", data.courseBenefits);\r\n    formData.append(\"category\", data.courseCategory);\r\n    formData.append(\"instructions\", JSON.stringify(data.courseRequirements));\r\n    formData.append(\"status\", COURSE_STASTUS.DRAFT);\r\n\r\n    console.log(\"Hellow\", step);\r\n\r\n    setLoading(true);\r\n    const result = await addCourseDetails(formData, token);\r\n    console.log(\"Result: .. \", result);\r\n    if (result) {\r\n      dispatch(setStep(2));\r\n      dispatch(setCourse(result));\r\n      console.log(step);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        className=\" rounded-md border-richblack-700 bg-richblack-800 p-6 space-y-8\"\r\n      >\r\n        <div>\r\n          <label htmlFor=\"courseTitle\" className=\"lable-style\">\r\n            Course Title\r\n            <sup className=\" text-pink-400\">*</sup>\r\n          </label>\r\n          <input\r\n            id=\"courseTitle\"\r\n            placeholder=\"Enter Course Title\"\r\n            {...register(\"courseTitle\", { required: true })}\r\n            className=\" w-full form-style\"\r\n          />\r\n          {errors.courseTitle && <span>Course Title is required</span>}\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label htmlFor=\"courseShortDesc\" className=\"lable-style\">\r\n            Course Short Description\r\n          </label>\r\n          <textarea\r\n            id=\"courseShortDesc\"\r\n            name=\"courseShortDesc\"\r\n            placeholder=\"Enter Description\"\r\n            {...register(\"courseShortDesc\", { required: true })}\r\n            className=\"form-style\"\r\n          />\r\n          {errors.courseShortDesc && (\r\n            <span>Course Discription is required</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\" relative flex-col\">\r\n          <label htmlFor=\"coursePrice\" className=\"lable-style\">\r\n            Course Price\r\n            <sup className=\" text-pink-400\">*</sup>\r\n          </label>\r\n          <input\r\n            id=\"coursePrice\"\r\n            placeholder=\"      Enter Course Price\"\r\n            {...register(\"coursePrice\", {\r\n              required: true,\r\n              valueAsNumber: true,\r\n            })}\r\n            className=\" w-full form-style\"\r\n          />\r\n          {errors.coursePrice && <span>Course Price is required</span>}\r\n\r\n          <HiOutlineCurrencyRupee className=\" absolute top-1/2 left-2 text-richblack-400 text-2xl\" />\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <label htmlFor=\"courseCategory\" className=\"lable-style\">\r\n            Course Category\r\n          </label>\r\n          <select\r\n            id=\"courseCategory\"\r\n            name=\"courseCategory\"\r\n            className=\"form-style\"\r\n            defaultValue=\"\"\r\n            {...register(\"courseCategory\", { required: true })}\r\n          >\r\n            <option value=\"\" disabled></option>\r\n            {!loading &&\r\n              courseCategories.map((category, index) => (\r\n                <option key={index} value={category?._id}>\r\n                  {category?.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* <ChipInput\r\n          label=\"Tag\"\r\n          name=\"courseTags\"\r\n          placeholder=\"Enter tags and press enter\"\r\n          register={register}\r\n          errors={errors}\r\n          setValue={setValue}\r\n          getValues={getValues}\r\n        /> */}\r\n\r\n        {/* <Upload\r\n          name\r\n        /> */}\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label htmlFor=\"courseBenefits\" className=\"lable-style\">\r\n            Benefifts of the course\r\n          </label>\r\n          <textarea\r\n            id=\"courseBenefits\"\r\n            name=\"courseBenefits\"\r\n            placeholder=\"Enter Benefifts of the course\"\r\n            {...register(\"courseBenefits\", { required: true })}\r\n            className=\"form-style w-full min-h-[130px]\"\r\n          />\r\n          {errors.courseBenefits && (\r\n            <span>Benefits of the course are required</span>\r\n          )}\r\n        </div>\r\n\r\n        <RequirementFied\r\n          name=\"courseRequirements\"\r\n          label=\"Requirements\"\r\n          register={register}\r\n          errors={errors}\r\n          setValue={setValue}\r\n          getValues={getValues}\r\n        />\r\n\r\n        <div>\r\n          {editCourse && (\r\n            <button\r\n              onClick={() => dispatch(setStep(2))}\r\n              className=\"flex items-center gap-x-2 bg-richblack-300\"\r\n            >\r\n              Continue Without Saving\r\n            </button>\r\n          )}\r\n\r\n          <Iconbtn text={!editCourse ? \"Next\" : \"Save Changes\"} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseInformationForm;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\CourseBuilder.jsx",["355"],"import React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Iconbtn from \"../../../../common/Iconbtn\";\r\nimport { GrAddCircle } from \"react-icons/gr\";\r\nimport { FaRegArrowAltCircleRight } from \"react-icons/fa\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setCourse,\r\n  setEditCourse,\r\n  setStep,\r\n} from \"../../../../../slices/courseSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport {\r\n  createSection,\r\n  updateSection,\r\n} from \"../../../../../services/operations/courseDetailsAPI\";\r\nimport NestedView from \"./NestedView\";\r\n\r\nfunction CourseBuilder() {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const [editSectionName, setEditSectionName] = useState(null);\r\n  const { course } = useSelector((state) => state.course);\r\n  const { token } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const cancelEdit = () => {\r\n    setEditSectionName(null);\r\n    setValue(\"sectionName\", \"\");\r\n  };\r\n\r\n  const goToBack = () => {\r\n    dispatch(setStep(1));\r\n    dispatch(setEditCourse(true));\r\n  };\r\n\r\n  const goToNext = () => {\r\n    if (course.courseContent.length === 0) {\r\n      toast.error(\"Please add one atleast one Section\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      course.courseContent.some((section) => section.subsection.length === 0)\r\n    ) {\r\n      toast.error(\"Please add atleast one lecture in each section\");\r\n    }\r\n\r\n    // if everything is good\r\n    dispatch(setStep(3));\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    // console.log(\"data >> \", data);\r\n\r\n    setLoading(true);\r\n    let result;\r\n\r\n    if (editSectionName) {\r\n      // we are editing the section name\r\n      console.log(\"editSectionName == \", editSectionName);\r\n      result = await updateSection(\r\n        {\r\n          sectionName: data.sectionName,\r\n          sectionId: editSectionName,\r\n          courseId: course._id,\r\n        },\r\n        token\r\n      );\r\n    } else {\r\n      result = await createSection(\r\n        {\r\n          sectionName: data.sectionName,\r\n          courseId: course._id,\r\n        },\r\n        token\r\n      );\r\n    }\r\n\r\n    console.log(\"result ... \", result);\r\n\r\n    // update value\r\n    if (result) {\r\n      dispatch(setCourse(result));\r\n      setEditCourse(null);\r\n      setValue(\"sectionName\", \"\");\r\n    }\r\n\r\n    // loading false\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleChangeEditSectionName = (sectionId, sectionName) => {\r\n    if (editSectionName === sectionId) {\r\n      cancelEdit();\r\n      return;\r\n    }\r\n\r\n    setEditSectionName(sectionId);\r\n    setValue(\"sectionName\", sectionName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>Course Builder</p>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"flex flex-col\">\r\n          <label id=\"sectionName\" htmlFor=\"\" className=\"lable-style\">\r\n            Section name\r\n          </label>\r\n          <input\r\n            id=\"sectionName\"\r\n            placeholder=\"Add section name\"\r\n            name=\"sectionName\"\r\n            {...register(\"sectionName\", { required: true })}\r\n            className=\"form-style\"\r\n          />\r\n          {errors.sectionName && <span>Section Name is required</span>}\r\n        </div>\r\n        <div className=\" flex flex-row items-end mt-6 gap-x-3\">\r\n          <Iconbtn\r\n            type=\"Submit\"\r\n            text={editSectionName ? \"Edit Section Name\" : \"Create Section\"}\r\n            outline={true}\r\n            customClasses={\"text-yellow-50 flex flex-row items-center gap-x-2\"}\r\n            children={<GrAddCircle />}\r\n          ></Iconbtn>\r\n          {editSectionName && (\r\n            <span\r\n              onClick={cancelEdit}\r\n              className=\" cursor-pointer text-richblack-300 hover:text-richblack-500 underline\"\r\n            >\r\n              Cancel Edit\r\n            </span>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {course.courseContent.length > 0 && (\r\n        <NestedView handleChangeEditSectionName={handleChangeEditSectionName} />\r\n      )}\r\n\r\n      <div className=\"flex justify-end gap-x-3\">\r\n        <button\r\n          className=\" rounded-md cursor-pointer flex items-center\"\r\n          onClick={goToBack}\r\n        >\r\n          Back\r\n        </button>\r\n        <Iconbtn text=\"Next\" onClick={goToNext}>\r\n          <FaRegArrowAltCircleRight />\r\n        </Iconbtn>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CourseBuilder;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\common\\Tap.jsx",[],"C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\services\\operations\\courseDetailsAPI.js",["356"],"import { toast } from \"react-hot-toast\";\n\nimport { updateCompletedLectures } from \"../../slices/viewCourseSlice\";\n// import { setLoading } from \"../../slices/profileSlice\";\nimport { apiConnector } from \"../apiconnector\";\nimport { courseEndpoints } from \"../api\";\n\nconst {\n  COURSE_DETAILS_API,\n  COURSE_CATEGORIES_API,\n  GET_ALL_COURSE_API,\n  CREATE_COURSE_API,\n  EDIT_COURSE_API,\n  CREATE_SECTION_API,\n  CREATE_SUBSECTION_API,\n  UPDATE_SECTION_API,\n  UPDATE_SUBSECTION_API,\n  DELETE_SECTION_API,\n  DELETE_SUBSECTION_API,\n  GET_ALL_INSTRUCTOR_COURSES_API,\n  DELETE_COURSE_API,\n  GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n  CREATE_RATING_API,\n  LECTURE_COMPLETION_API,\n} = courseEndpoints;\n\nexport const getAllCourses = async () => {\n  const toastId = toast.loading(\"Loading...\");\n  let result = [];\n  try {\n    const response = await apiConnector(\"GET\", GET_ALL_COURSE_API);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\");\n    }\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"GET_ALL_COURSE_API API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\nexport const fetchCourseDetails = async (courseId) => {\n  const toastId = toast.loading(\"Loading...\");\n  //   dispatch(setLoading(true));\n  let result = null;\n  try {\n    const response = await apiConnector(\"POST\", COURSE_DETAILS_API, {\n      courseId,\n    });\n    console.log(\"COURSE_DETAILS_API API RESPONSE............\", response);\n\n    if (!response.data.success) {\n      throw new Error(response.data.message);\n    }\n    result = response.data;\n  } catch (error) {\n    console.log(\"COURSE_DETAILS_API API ERROR............\", error);\n    result = error.response.data;\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId);\n  //   dispatch(setLoading(false));\n  return result;\n};\n\n// fetching the available course categories\nexport const fetchCourseCategories = async () => {\n  let result = [];\n  try {\n    const response = await apiConnector(\"GET\", COURSE_CATEGORIES_API);\n    console.log(\"COURSE_CATEGORIES_API API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\");\n    }\n    result = response?.data?.allCategorys;\n  } catch (error) {\n    console.log(\"COURSE_CATEGORY_API API ERROR............\", error);\n    toast.error(error.message);\n  }\n  return result;\n};\n\n// add the course details\nexport const addCourseDetails = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", CREATE_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorisation: `Bearer ${token}`,\n    });\n\n    console.log(\"CREATE COURSE API RESPONSE............\", response?.data);\n\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Course Details\");\n    }\n    toast.success(\"Course Details Added Successfully\");\n    result = response?.data?.newCourse;\n  } catch (error) {\n    console.log(\"CREATE COURSE API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// edit the course details\nexport const editCourseDetails = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", EDIT_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorisation: `Bearer ${token}`,\n    });\n    console.log(\"EDIT COURSE API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Course Details\");\n    }\n    toast.success(\"Course Details Updated Successfully\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"EDIT COURSE API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// create a section\nexport const createSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SECTION_API, data, {\n      Authorisation: `Bearer ${token}`,\n    });\n    console.log(\"CREATE SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Section\");\n    }\n    toast.success(\"Course Section Created\");\n    result = response?.data?.updatedCourseDetails;\n  } catch (error) {\n    console.log(\"CREATE SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// create a subsection\nexport const createSubSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"CREATE SUB-SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Lecture\");\n    }\n    toast.success(\"Lecture Added\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"CREATE SUB-SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// update a section\nexport const updateSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SECTION_API, data, {\n      Authorisation: `Bearer ${token}`,\n    });\n    console.log(\"UPDATE SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Section\");\n    }\n    toast.success(\"Course Section Updated\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"UPDATE SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// update a subsection\nexport const updateSubSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"UPDATE SUB-SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Lecture\");\n    }\n    toast.success(\"Lecture Updated\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"UPDATE SUB-SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// delete a section\nexport const deleteSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"DELETE SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Section\");\n    }\n    toast.success(\"Course Section Deleted\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"DELETE SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// delete a subsection\nexport const deleteSubSection = async (data, token) => {\n  let result = null;\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"DELETE SUB-SECTION API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Lecture\");\n    }\n    toast.success(\"Lecture Deleted\");\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"DELETE SUB-SECTION API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// fetching all courses under a specific instructor\nexport const fetchInstructorCourses = async (token) => {\n  let result = [];\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\n      \"GET\",\n      GET_ALL_INSTRUCTOR_COURSES_API,\n      null,\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    );\n    console.log(\"INSTRUCTOR COURSES API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Instructor Courses\");\n    }\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"INSTRUCTOR COURSES API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// delete a course\nexport const deleteCourse = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"DELETE\", DELETE_COURSE_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"DELETE COURSE API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Course\");\n    }\n    toast.success(\"Course Deleted\");\n  } catch (error) {\n    console.log(\"DELETE COURSE API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n};\n\n// get full details of a course\nexport const getFullDetailsOfCourse = async (courseId, token) => {\n  const toastId = toast.loading(\"Loading...\");\n  //   dispatch(setLoading(true));\n  let result = null;\n  try {\n    const response = await apiConnector(\n      \"POST\",\n      GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n      {\n        courseId,\n      },\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    );\n    console.log(\"COURSE_FULL_DETAILS_API API RESPONSE............\", response);\n\n    if (!response.data.success) {\n      throw new Error(response.data.message);\n    }\n    result = response?.data?.data;\n  } catch (error) {\n    console.log(\"COURSE_FULL_DETAILS_API API ERROR............\", error);\n    result = error.response.data;\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId);\n  //   dispatch(setLoading(false));\n  return result;\n};\n\n// mark a lecture as complete\nexport const markLectureAsComplete = async (data, token) => {\n  let result = null;\n  console.log(\"mark complete data\", data);\n  const toastId = toast.loading(\"Loading...\");\n  try {\n    const response = await apiConnector(\"POST\", LECTURE_COMPLETION_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\n      \"MARK_LECTURE_AS_COMPLETE_API API RESPONSE............\",\n      response\n    );\n\n    if (!response.data.message) {\n      throw new Error(response.data.error);\n    }\n    toast.success(\"Lecture Completed\");\n    result = true;\n  } catch (error) {\n    console.log(\"MARK_LECTURE_AS_COMPLETE_API API ERROR............\", error);\n    toast.error(error.message);\n    result = false;\n  }\n  toast.dismiss(toastId);\n  return result;\n};\n\n// create a rating for course\nexport const createRating = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\");\n  let success = false;\n  try {\n    const response = await apiConnector(\"POST\", CREATE_RATING_API, data, {\n      Authorization: `Bearer ${token}`,\n    });\n    console.log(\"CREATE RATING API RESPONSE............\", response);\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Rating\");\n    }\n    toast.success(\"Rating Created\");\n    success = true;\n  } catch (error) {\n    success = false;\n    console.log(\"CREATE RATING API ERROR............\", error);\n    toast.error(error.message);\n  }\n  toast.dismiss(toastId);\n  return success;\n};\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseInformation\\RequirementFied.jsx",["357"],"import React, { useEffect, useState } from \"react\";\r\n\r\nfunction RequirementFied({\r\n  label,\r\n  name,\r\n  register,\r\n  errors,\r\n  setValue,\r\n  getValue,\r\n}) {\r\n  const [requirement, setRequirement] = useState(\"\");\r\n  const [requirementList, setRequirementList] = useState([]);\r\n\r\n  const handleAddRequirement = () => {\r\n    if (requirement) {\r\n      setRequirementList([...requirementList, requirement]);\r\n      // console.log(requirementList);\r\n      setRequirement(\"\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveRequirement = (index) => {\r\n    const updatedRequirementList = [...requirementList];\r\n    updatedRequirementList.splice(index, 1);\r\n    setRequirementList(updatedRequirementList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue(name, requirementList);\r\n  }, [requirementList]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <label className=\"lable-style\" htmlFor={name}>\r\n          {\" \"}\r\n          {label} <sup>*</sup>{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id={name}\r\n          name={name}\r\n          value={requirement}\r\n          onChange={(e) => setRequirement(e.target.value)}\r\n          className=\"form-style\"\r\n        />\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleAddRequirement}\r\n          className=\" font-semibold text-yellow-50\"\r\n        >\r\n          Add\r\n        </button>\r\n\r\n        {requirementList.length > 0 && (\r\n          <ul>\r\n            {requirementList.map((item, index) => (\r\n              <li key={index} className=\" flex items-center text-richblack-5\">\r\n                <span>{item}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleRemoveRequirement(index)}\r\n                  className=\" text-xs text-pure-greys-300\"\r\n                >\r\n                  clear\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        {errors.name && <span>{label} is required</span>}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RequirementFied;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\NestedView.jsx",["358","359"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RxDropdownMenu } from \"react-icons/rx\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport { BiSolidDownArrow } from \"react-icons/bi\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\";\r\nimport SubSection from \"./SubSecion\";\r\nimport ConfirmationModal from \"../../../../common/ConfirmationModal\";\r\nimport { deleteSection, deleteSubSection } from \"../../../../../services/operations/courseDetailsAPI\";\r\nimport { Result } from \"postcss\";\r\nimport { setCourse } from \"../../../../../slices/courseSlice\";\r\n\r\nfunction NestedView({ handleChangeEditSectionName }) {\r\n  const { course } = useSelector((state) => state.course);\r\n  const { token } = useSelector * ((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [addSubsection, setAddSubSection] = useState(null);\r\n  const [viewSubsection, setViewSubsection] = useState(null);\r\n  const [editSubsection, setEditSubsection] = useState(null);\r\n  const [confirmationModal, setConfirmationModal] = useState(null);\r\n\r\n  async function hadleDeleteSection(sectionId) {\r\n    const result = await deleteSection({\r\n      sectionId,\r\n      courseId: course._id,\r\n      token,\r\n    });\r\n    if(result) dispatch(setCourse(result));\r\n    setConfirmationModal(null);\r\n  }\r\n\r\n  async function hadleDeleteSubSection(subSectionId, sectionId) {\r\n    const result = await deleteSubSection({subSectionId, sectionId, token})\r\n    if(result) dispatch(setCourse(null));\r\n  }\r\n\r\n  return (\r\n    <div className=\" mt-5 mb-5 rounded-lg bg-richblack-700 p-6 px-8\">\r\n      <div>\r\n        {course?.courseContent?.map((section) => (\r\n          <details key={section._id} className=\"flex\" open>\r\n            <summary className=\"flex gap-x-3 items-center justify-between border-b-2\">\r\n              <div className=\"flex items-center gap-x-2\">\r\n                <RxDropdownMenu />\r\n                <p> {section.sectionName} </p>\r\n              </div>\r\n\r\n              <div className=\" flex items-center gap-x-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    handleChangeEditSectionName(\r\n                      section._id,\r\n                      section.sectionName\r\n                    );\r\n                  }}\r\n                >\r\n                  <MdEdit />\r\n                </button>\r\n                <button\r\n                  onClick={() => {\r\n                    setConfirmationModal({\r\n                      text1: \"Delete this Section\",\r\n                      text2: \"All the lectures in this section will be deleted\",\r\n                      btn1Text: \"Delete\",\r\n                      btn2Text: \"Cancle\",\r\n                      btn1Handler: () => hadleDeleteSection(section._id),\r\n                      btn2Handler: () => setConfirmationModal(null),\r\n                    });\r\n                  }}\r\n                >\r\n                  <RiDeleteBin6Line />\r\n                </button>\r\n                <span>|</span>\r\n                <BiSolidDownArrow />\r\n              </div>\r\n            </summary>\r\n            <div>\r\n              {section.subSection.map((data) => {\r\n                <div\r\n                  key={data?._id}\r\n                  onClick={() => setViewSubsection(data)}\r\n                  className=\"flex items-center justify-between gap-x-3 border-b-2\"\r\n                >\r\n                  <div className=\"flex items-center gap-x-2\">\r\n                    <RxDropdownMenu />\r\n                    <p> {data?.title} </p>\r\n                  </div>\r\n\r\n                  <div className=\" flex items-center gap-x-3\">\r\n                    <button\r\n                      onClick={() =>\r\n                        setEditSubsection({ ...data, sectionId: section._id })\r\n                      }\r\n                    >\r\n                      <MdEdit />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setConfirmationModal({\r\n                          text1: \"Delete this Section\",\r\n                          text2:\r\n                            \"All the lectures in this section will be deleted\",\r\n                          btn1Text: \"Delete\",\r\n                          btn2Text: \"Cancle\",\r\n                          btn1Handler: () =>\r\n                            hadleDeleteSubSection(data._id, section._id),\r\n                          btn2Handler: () => setConfirmationModal(null),\r\n                        });\r\n                      }}\r\n                    >\r\n                      <RiDeleteBin6Line />\r\n                    </button>\r\n                  </div>\r\n                </div>;\r\n              })}\r\n              <button\r\n                onClick={setAddSubSection(section._id)}\r\n                className=\" mt-4 flex items-center gap-x-2 text-yellow-50\"\r\n              >\r\n                <AiOutlinePlus />\r\n                <p>Add Lecture</p>\r\n              </button>\r\n            </div>\r\n          </details>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        {addSubsection ? (\r\n          <SubSection\r\n            modalData={addSubsection}\r\n            setModalData={setAddSubSection}\r\n            add={true}\r\n          />\r\n        ) : viewSubsection ? (\r\n          <SubSection\r\n            modalData={viewSubsection}\r\n            setModalData={setViewSubsection}\r\n            add={true}\r\n          />\r\n        ) : editSubsection ? (\r\n          <SubSection\r\n            modalData={editSubsection}\r\n            setModalData={setEditSubsection}\r\n            add={true}\r\n          />\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {confirmationModal ? (\r\n          <ConfirmationModal modalData={confirmationModal} />\r\n        ) : (\r\n          <div />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NestedView;\r\n","C:\\Users\\gaziy\\OneDrive\\Desktop\\StudyNotion\\src\\components\\core\\Dashboad\\AddCourse\\CourseBuilder\\SubSecion.jsx",["360","361","362"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport toast from \"react-hot-toast\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setCourse } from \"../../../../../slices/courseSlice\";\r\nimport { updateSubSection } from \"../../../../../services/operations/courseDetailsAPI\";\r\nimport { RxCross1 } from \"react-icons/rx\";\r\nimport { hashSync } from \"bcrypt\";\r\nimport Iconbtn from \"../../../../common/Iconbtn\";\r\nimport { createSubSection } from \"../../../../../services/operations/courseDetailsAPI\";\r\n\r\nfunction SubSecion({\r\n  modalData,\r\n  setModalData,\r\n  add = false,\r\n  view = false,\r\n  edit = false,\r\n}) {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    getValues,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const dispatch = useDispatch();\r\n  const [loading, setLoading] = useState(false);\r\n  const { course } = useSelector((state) => state.course);\r\n  const { token } = useSelector * ((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (view || edit) {\r\n      setValue(\"lectureTitle\", modalData.title);\r\n      setValue(\"lectureDesc\", modalData.description);\r\n      setValue(\"lectureVideo\", modalData.videoUrl);\r\n    }\r\n  }, []);\r\n\r\n  const handleEditSubSection = async () => {\r\n    const currentValues = getValues();\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"sectionId\", modalData.sectionId);\r\n    formData.append(\"subSectionId\", modalData._id);\r\n\r\n    if (currentValues.lectureDesc !== modalData.description)\r\n      formData.append(\"description\", currentValues.lectureDesc);\r\n\r\n    if (currentValues.lectureTitle !== modalData.title)\r\n      formData.append(\"title\", currentValues.lectureTitle);\r\n\r\n    if (currentValues.lectureVideo !== modalData.videoUrl)\r\n      formData.append(\"video\", currentValues.lectureVideo);\r\n\r\n    setLoading(true);\r\n    const result = await updateSubSection(formData, token);\r\n    if (result) dispatch(setCourse(result));\r\n    setModalData(null);\r\n    setLoading(false);\r\n  };\r\n\r\n  const isFormUpdated = () => {\r\n    const currentValues = getValues();\r\n    if (\r\n      currentValues.lectureTitle !== modalData.title ||\r\n      currentValues.lectureDesc !== modalData.description ||\r\n      currentValues.lectureVideo !== modalData.videoUrl\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    if (view) return;\r\n\r\n    if (edit) {\r\n      // edit kardo\r\n      if (!isFormUpdated) toast.error(\"No change made to the form !!!\");\r\n      else handleEditSubSection();\r\n      return;\r\n    }\r\n\r\n    // subsection create kardo\r\n    const formData = new FormData();\r\n    formData.append(\"sectionId\", modalData);\r\n    formData.append(\"title\", data.lectureTitle);\r\n    formData.append(\"description\", data.lectureDesc);\r\n    formData.append(\"video\", data.lectureVideo);\r\n\r\n    setLoading(true);\r\n    const result = await createSubSection(formData, token);\r\n    if (result) {\r\n      // TODO\r\n      dispatch(setCourse(result));\r\n    }\r\n\r\n    setModalData(null);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>\r\n          {view && \"Viewing\"} {add && \"Adding\"} {edit && \"Editing\"} Lecture{\" \"}\r\n        </p>\r\n        <button onClick={() => (!loading ? setModalData(null) : {})}>\r\n          <RxCross1 />\r\n        </button>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {/* <Upload\r\n          name=\"lectureVideo\"\r\n          lable=\"Lecture Video\"\r\n          register={register}\r\n          setValue={setValue}\r\n          errors={errors}\r\n          video={true}\r\n          viewData={view ? modalData.videoUrl : null}\r\n          editData={edit ? modalData.videoUrl : null}\r\n        /> */}\r\n\r\n        <div>\r\n          <label htmlFor=\"lectureTitle\" className=\"lable-style\">\r\n            Lecture Description\r\n          </label>\r\n          <input\r\n            id=\"lectureTitle\"\r\n            name=\"lectureTitle\"\r\n            placeholder=\"Enter Lecture Title\"\r\n            {...register(\"lectureTitle\", { required: true })}\r\n            className=\" w-full min-h-[130px] form-style\"\r\n          />\r\n          {errors.lectureTitle && <span>Lecture Title is required</span>}\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"lectureDesc\" className=\"lable-style\">\r\n            Lecture Description\r\n          </label>\r\n          <textarea\r\n            id=\"lectureDesc\"\r\n            name=\"lectureDesc\"\r\n            placeholder=\"Enter Lecture Description\"\r\n            {...register(\"lectureDesc\", { required: true })}\r\n            className=\" w-full min-h-[130px]\"\r\n          />\r\n          {errors.lectureDesc && <span>Lecture Description is required</span>}\r\n        </div>\r\n\r\n        {!view && (\r\n          <div>\r\n            <Iconbtn\r\n              text={loading ? \"Loading...\" : edit ? \"Save Change\" : \"Save\"}\r\n            />\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubSecion;\r\n",{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"371","severity":1,"message":"372","line":29,"column":21,"nodeType":"373","endLine":29,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":30,"column":21,"nodeType":"373","endLine":30,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":31,"column":21,"nodeType":"373","endLine":31,"endColumn":41},{"ruleId":"371","severity":1,"message":"372","line":60,"column":25,"nodeType":"373","endLine":60,"endColumn":52},{"ruleId":"374","severity":1,"message":"375","line":20,"column":6,"nodeType":"376","endLine":20,"endColumn":8,"suggestions":"377"},{"ruleId":"367","severity":1,"message":"378","line":4,"column":8,"nodeType":"369","messageId":"370","endLine":4,"endColumn":15},{"ruleId":"367","severity":1,"message":"379","line":5,"column":27,"nodeType":"369","messageId":"370","endLine":5,"endColumn":35},{"ruleId":"367","severity":1,"message":"380","line":5,"column":37,"nodeType":"369","messageId":"370","endLine":5,"endColumn":44},{"ruleId":"367","severity":1,"message":"381","line":13,"column":9,"nodeType":"369","messageId":"370","endLine":13,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":22,"column":13,"nodeType":"373","endLine":25,"endColumn":15},{"ruleId":"367","severity":1,"message":"382","line":17,"column":11,"nodeType":"369","messageId":"370","endLine":17,"endColumn":15},{"ruleId":"371","severity":1,"message":"372","line":45,"column":11,"nodeType":"373","endLine":45,"endColumn":48},{"ruleId":"374","severity":1,"message":"383","line":22,"column":6,"nodeType":"376","endLine":22,"endColumn":8,"suggestions":"384"},{"ruleId":"371","severity":1,"message":"372","line":43,"column":19,"nodeType":"373","endLine":43,"endColumn":49},{"ruleId":"367","severity":1,"message":"385","line":4,"column":8,"nodeType":"369","messageId":"370","endLine":4,"endColumn":17},{"ruleId":"367","severity":1,"message":"386","line":20,"column":12,"nodeType":"369","messageId":"370","endLine":20,"endColumn":22},{"ruleId":"367","severity":1,"message":"387","line":22,"column":11,"nodeType":"369","messageId":"370","endLine":22,"endColumn":20},{"ruleId":"371","severity":1,"message":"372","line":48,"column":17,"nodeType":"373","endLine":53,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":54,"column":17,"nodeType":"373","endLine":59,"endColumn":19},{"ruleId":"367","severity":1,"message":"388","line":3,"column":8,"nodeType":"369","messageId":"370","endLine":3,"endColumn":21},{"ruleId":"371","severity":1,"message":"372","line":13,"column":17,"nodeType":"373","endLine":16,"endColumn":19},{"ruleId":"367","severity":1,"message":"389","line":27,"column":10,"nodeType":"369","messageId":"370","endLine":27,"endColumn":21},{"ruleId":"367","severity":1,"message":"390","line":27,"column":23,"nodeType":"369","messageId":"370","endLine":27,"endColumn":37},{"ruleId":"371","severity":1,"message":"372","line":42,"column":37,"nodeType":"373","endLine":42,"endColumn":82},{"ruleId":"391","severity":1,"message":"392","line":55,"column":37,"nodeType":"393","messageId":"394","endLine":55,"endColumn":44},{"ruleId":"395","severity":1,"message":"396","line":56,"column":35,"nodeType":"393","messageId":"397","endLine":56,"endColumn":37},{"ruleId":"395","severity":1,"message":"398","line":47,"column":48,"nodeType":"393","messageId":"397","endLine":47,"endColumn":50},{"ruleId":"367","severity":1,"message":"399","line":3,"column":10,"nodeType":"369","messageId":"370","endLine":3,"endColumn":14},{"ruleId":"371","severity":1,"message":"372","line":22,"column":7,"nodeType":"373","endLine":26,"endColumn":9},{"ruleId":"371","severity":1,"message":"372","line":16,"column":13,"nodeType":"373","endLine":16,"endColumn":44},{"ruleId":"367","severity":1,"message":"400","line":14,"column":10,"nodeType":"369","messageId":"370","endLine":14,"endColumn":23},{"ruleId":"371","severity":1,"message":"372","line":58,"column":7,"nodeType":"373","endLine":61,"endColumn":9},{"ruleId":"367","severity":1,"message":"401","line":11,"column":11,"nodeType":"369","messageId":"370","endLine":11,"endColumn":16},{"ruleId":"367","severity":1,"message":"402","line":14,"column":9,"nodeType":"369","messageId":"370","endLine":14,"endColumn":17},{"ruleId":"367","severity":1,"message":"403","line":18,"column":5,"nodeType":"369","messageId":"370","endLine":18,"endColumn":17},{"ruleId":"367","severity":1,"message":"404","line":2,"column":10,"nodeType":"369","messageId":"370","endLine":2,"endColumn":14},{"ruleId":"367","severity":1,"message":"405","line":5,"column":10,"nodeType":"369","messageId":"370","endLine":5,"endColumn":22},{"ruleId":"367","severity":1,"message":"406","line":6,"column":10,"nodeType":"369","messageId":"370","endLine":6,"endColumn":14},{"ruleId":"367","severity":1,"message":"407","line":7,"column":10,"nodeType":"369","messageId":"370","endLine":7,"endColumn":17},{"ruleId":"367","severity":1,"message":"402","line":10,"column":9,"nodeType":"369","messageId":"370","endLine":10,"endColumn":17},{"ruleId":"367","severity":1,"message":"406","line":4,"column":10,"nodeType":"369","messageId":"370","endLine":4,"endColumn":14},{"ruleId":"374","severity":1,"message":"408","line":50,"column":6,"nodeType":"376","endLine":50,"endColumn":8,"suggestions":"409"},{"ruleId":"367","severity":1,"message":"407","line":31,"column":10,"nodeType":"369","messageId":"370","endLine":31,"endColumn":17},{"ruleId":"367","severity":1,"message":"410","line":3,"column":10,"nodeType":"369","messageId":"370","endLine":3,"endColumn":33},{"ruleId":"374","severity":1,"message":"411","line":30,"column":6,"nodeType":"376","endLine":30,"endColumn":23,"suggestions":"412"},{"ruleId":"367","severity":1,"message":"413","line":11,"column":10,"nodeType":"369","messageId":"370","endLine":11,"endColumn":16},{"ruleId":"414","severity":1,"message":"415","line":80,"column":46,"nodeType":"416","messageId":"417","endLine":80,"endColumn":48},{"ruleId":"367","severity":1,"message":"418","line":8,"column":10,"nodeType":"369","messageId":"370","endLine":8,"endColumn":18},{"ruleId":"367","severity":1,"message":"419","line":29,"column":11,"nodeType":"369","messageId":"370","endLine":29,"endColumn":17},{"ruleId":"374","severity":1,"message":"420","line":38,"column":6,"nodeType":"376","endLine":38,"endColumn":8,"suggestions":"421"},"no-native-reassign",["422"],"no-negated-in-lhs",["423"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'signupData'. Either include them or remove the dependency array.","ArrayExpression",["424"],"'Iconbtn' is defined but never used.","'VscPulse' is defined but never used.","'Vscplus' is defined but never used.","'navigate' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEnrolledCourses'. Either include it or remove the dependency array.",["425"],"'CTAButton' is defined but never used.","'currentTab' is assigned a value but never used.","'changeTab' is assigned a value but never used.","'HighlightText' is defined but never used.","'currentCard' is assigned a value but never used.","'setCurrentCard' is assigned a value but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","eqeqeq","Expected '===' and instead saw '=='.","unexpected","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","'previewSource' is assigned a value but never used.","'token' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Form' is defined but never used.","'apiConnector' is defined but never used.","'user' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'course.category', 'course.courseDescription', 'course.courseName', 'course.instruction', 'course.price', 'course.tag', 'course.thumbnail', 'course.whatYouWillLearn', 'editCourse', and 'setValue'. Either include them or remove the dependency array.",["426"],"'updateCompletedLectures' is defined but never used.","React Hook useEffect has missing dependencies: 'name' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["427"],"'Result' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'hashSync' is defined but never used.","'course' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'edit', 'modalData.description', 'modalData.title', 'modalData.videoUrl', 'setValue', and 'view'. Either include them or remove the dependency array.",["428"],"no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},"Update the dependencies array to be: [navigate, signupData]",{"range":"439","text":"440"},"Update the dependencies array to be: [getEnrolledCourses]",{"range":"441","text":"442"},"Update the dependencies array to be: [course.category, course.courseDescription, course.courseName, course.instruction, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",{"range":"443","text":"444"},"Update the dependencies array to be: [name, requirementList, setValue]",{"range":"445","text":"446"},"Update the dependencies array to be: [edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]",{"range":"447","text":"448"},[803,805],"[navigate, signupData]",[732,734],"[getEnrolledCourses]",[1806,1808],"[course.category, course.courseDescription, course.courseName, course.instruction, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",[759,776],"[name, requirementList, setValue]",[1223,1225],"[edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]"]